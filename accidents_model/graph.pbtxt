node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 250
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "enqueue_input/Placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_1"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_2"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_3"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_4"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_5"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_6"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_7"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_8"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_9"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_10"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_11"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_12"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_13"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "enqueue_input/Placeholder"
  input: "enqueue_input/Placeholder_1"
  input: "enqueue_input/Placeholder_2"
  input: "enqueue_input/Placeholder_3"
  input: "enqueue_input/Placeholder_4"
  input: "enqueue_input/Placeholder_5"
  input: "enqueue_input/Placeholder_6"
  input: "enqueue_input/Placeholder_7"
  input: "enqueue_input/Placeholder_8"
  input: "enqueue_input/Placeholder_9"
  input: "enqueue_input/Placeholder_10"
  input: "enqueue_input/Placeholder_11"
  input: "enqueue_input/Placeholder_12"
  input: "enqueue_input/Placeholder_13"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/sub/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "enqueue_input/sub"
  op: "Sub"
  input: "enqueue_input/random_shuffle_queue_Size"
  input: "enqueue_input/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum"
  op: "Maximum"
  input: "enqueue_input/Maximum/x"
  input: "enqueue_input/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Cast"
  op: "Cast"
  input: "enqueue_input/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0013333333190530539
      }
    }
  }
}
node {
  name: "enqueue_input/mul"
  op: "Mul"
  input: "enqueue_input/Cast"
  input: "enqueue_input/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  op: "ScalarSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  input: "enqueue_input/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany"
  op: "QueueDequeueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "random_shuffle_queue_DequeueMany/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:1"
  input: "dnn/input_from_feature_columns/input_layer/Dan/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Dan/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Dan/Shape"
  input: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Dan/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/Dan/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Dan/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Dan/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/Dan/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:8"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2
          }
        }
        string_val: "C"
        string_val: "N"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:2"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/Shape"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Mesec/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:6"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2327
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2327
          }
        }
        string_val: "2401"
        string_val: "2407"
        string_val: "2500"
        string_val: "2533"
        string_val: "2541"
        string_val: "2546"
        string_val: "2574"
        string_val: "2621"
        string_val: "2625"
        string_val: "9578"
        string_val: "9580"
        string_val: "18952"
        string_val: "18956"
        string_val: "18958"
        string_val: "18963"
        string_val: "18967"
        string_val: "18968"
        string_val: "18969"
        string_val: "18974"
        string_val: "18975"
        string_val: "18977"
        string_val: "18978"
        string_val: "18979"
        string_val: "18981"
        string_val: "18982"
        string_val: "18985"
        string_val: "18989"
        string_val: "18993"
        string_val: "18995"
        string_val: "35555"
        string_val: "41112"
        string_val: "47509"
        string_val: "47511"
        string_val: "47532"
        string_val: "47533"
        string_val: "53977"
        string_val: "53996"
        string_val: "78011"
        string_val: "91122"
        string_val: "91230"
        string_val: "91234"
        string_val: "91253"
        string_val: "91258"
        string_val: "92113"
        string_val: "92123"
        string_val: "92144"
        string_val: "92222"
        string_val: "92603"
        string_val: "92755"
        string_val: "92759"
        string_val: "92763"
        string_val: "92766"
        string_val: "92770"
        string_val: "92771"
        string_val: "92801"
        string_val: "92802"
        string_val: "92807"
        string_val: "92808"
        string_val: "92809"
        string_val: "92811"
        string_val: "92813"
        string_val: "92814"
        string_val: "92815"
        string_val: "92816"
        string_val: "92818"
        string_val: "92819"
        string_val: "92821"
        string_val: "92824"
        string_val: "92830"
        string_val: "93004"
        string_val: "93017"
        string_val: "93101"
        string_val: "93103"
        string_val: "93112"
        string_val: "93125"
        string_val: "93132"
        string_val: "93219"
        string_val: "93333"
        string_val: "93336"
        string_val: "93421"
        string_val: "93425"
        string_val: "93509"
        string_val: "93544"
        string_val: "93810"
        string_val: "93829"
        string_val: "93831"
        string_val: "93902"
        string_val: "94001"
        string_val: "94040"
        string_val: "94202"
        string_val: "94204"
        string_val: "94206"
        string_val: "94208"
        string_val: "94209"
        string_val: "94212"
        string_val: "94213"
        string_val: "94214"
        string_val: "94218"
        string_val: "94601"
        string_val: "94704"
        string_val: "94706"
        string_val: "94900"
        string_val: "94901"
        string_val: "94902"
        string_val: "94903"
        string_val: "94905"
        string_val: "94911"
        string_val: "94915"
        string_val: "94918"
        string_val: "94920"
        string_val: "94924"
        string_val: "94931"
        string_val: "94996"
        string_val: "95111"
        string_val: "95401"
        string_val: "95447"
        string_val: "95504"
        string_val: "95521"
        string_val: "95533"
        string_val: "95539"
        string_val: "95540"
        string_val: "95561"
        string_val: "95573"
        string_val: "95604"
        string_val: "95605"
        string_val: "95606"
        string_val: "95607"
        string_val: "95609"
        string_val: "95610"
        string_val: "95612"
        string_val: "95615"
        string_val: "95625"
        string_val: "95626"
        string_val: "95631"
        string_val: "95634"
        string_val: "95635"
        string_val: "95636"
        string_val: "95639"
        string_val: "95642"
        string_val: "95646"
        string_val: "95647"
        string_val: "95649"
        string_val: "95652"
        string_val: "95653"
        string_val: "95676"
        string_val: "95677"
        string_val: "95680"
        string_val: "95683"
        string_val: "95684"
        string_val: "95686"
        string_val: "95689"
        string_val: "95693"
        string_val: "95705"
        string_val: "95713"
        string_val: "95731"
        string_val: "95743"
        string_val: "95745"
        string_val: "95758"
        string_val: "95761"
        string_val: "95772"
        string_val: "95774"
        string_val: "95819"
        string_val: "95841"
        string_val: "95852"
        string_val: "95872"
        string_val: "96105"
        string_val: "96123"
        string_val: "96132"
        string_val: "96409"
        string_val: "96710"
        string_val: "96718"
        string_val: "96734"
        string_val: "96809"
        string_val: "96812"
        string_val: "96816"
        string_val: "96819"
        string_val: "96832"
        string_val: "96833"
        string_val: "96837"
        string_val: "96838"
        string_val: "96866"
        string_val: "96867"
        string_val: "96868"
        string_val: "97027"
        string_val: "97058"
        string_val: "97099"
        string_val: "97106"
        string_val: "97113"
        string_val: "97161"
        string_val: "97203"
        string_val: "97220"
        string_val: "97317"
        string_val: "97326"
        string_val: "97425"
        string_val: "97435"
        string_val: "97438"
        string_val: "97448"
        string_val: "97450"
        string_val: "97465"
        string_val: "97480"
        string_val: "97503"
        string_val: "97504"
        string_val: "97515"
        string_val: "97516"
        string_val: "97519"
        string_val: "97714"
        string_val: "97720"
        string_val: "97727"
        string_val: "97751"
        string_val: "97772"
        string_val: "97777"
        string_val: "97806"
        string_val: "97901"
        string_val: "97912"
        string_val: "97917"
        string_val: "97934"
        string_val: "97940"
        string_val: "97955"
        string_val: "98207"
        string_val: "98208"
        string_val: "98225"
        string_val: "98227"
        string_val: "98229"
        string_val: "98230"
        string_val: "98231"
        string_val: "98245"
        string_val: "98246"
        string_val: "98249"
        string_val: "98250"
        string_val: "98253"
        string_val: "98266"
        string_val: "99000"
        string_val: "99071"
        string_val: "99474"
        string_val: "99719"
        string_val: "99906"
        string_val: "99922"
        string_val: "99989"
        string_val: "99990"
        string_val: "99999"
        string_val: "000A2"
        string_val: "91231"
        string_val: "000A1"
        string_val: "000H2"
        string_val: "000A3"
        string_val: "000H3"
        string_val: "104"
        string_val: "000A4"
        string_val: "000A5"
        string_val: "201"
        string_val: "452"
        string_val: "412"
        string_val: "211"
        string_val: "8"
        string_val: "106"
        string_val: "448"
        string_val: "101"
        string_val: "202"
        string_val: "741"
        string_val: "000H5"
        string_val: "000H6"
        string_val: "111"
        string_val: "1"
        string_val: "710"
        string_val: "229"
        string_val: "2"
        string_val: "651"
        string_val: "105"
        string_val: "437"
        string_val: "430"
        string_val: "447"
        string_val: "409"
        string_val: "449"
        string_val: "235"
        string_val: "443"
        string_val: "230"
        string_val: "5"
        string_val: "6"
        string_val: "444"
        string_val: "445"
        string_val: "9"
        string_val: "7"
        string_val: "109"
        string_val: "000H4"
        string_val: "436"
        string_val: "000H7"
        string_val: "103"
        string_val: "901"
        string_val: "203"
        string_val: "102"
        string_val: "204"
        string_val: "446"
        string_val: "940"
        string_val: "902"
        string_val: "903"
        string_val: "405"
        string_val: "611"
        string_val: "619"
        string_val: "205"
        string_val: "206"
        string_val: "603"
        string_val: "612"
        string_val: "402"
        string_val: "614"
        string_val: "617"
        string_val: "207"
        string_val: "208"
        string_val: "625"
        string_val: "11"
        string_val: "609"
        string_val: "608"
        string_val: "403"
        string_val: "210"
        string_val: "413"
        string_val: "225"
        string_val: "923"
        string_val: "209"
        string_val: "904"
        string_val: "905"
        string_val: "633"
        string_val: "907"
        string_val: "634"
        string_val: "212"
        string_val: "635"
        string_val: "911"
        string_val: "636"
        string_val: "909"
        string_val: "638"
        string_val: "410"
        string_val: "639"
        string_val: "407"
        string_val: "642"
        string_val: "728"
        string_val: "214"
        string_val: "216"
        string_val: "650"
        string_val: "215"
        string_val: "424"
        string_val: "683"
        string_val: "647"
        string_val: "660"
        string_val: "108"
        string_val: "645"
        string_val: "417"
        string_val: "665"
        string_val: "679"
        string_val: "933"
        string_val: "646"
        string_val: "418"
        string_val: "419"
        string_val: "675"
        string_val: "217"
        string_val: "661"
        string_val: "218"
        string_val: "415"
        string_val: "221"
        string_val: "680"
        string_val: "224"
        string_val: "688"
        string_val: "690"
        string_val: "219"
        string_val: "107"
        string_val: "423"
        string_val: "429"
        string_val: "428"
        string_val: "112"
        string_val: "4"
        string_val: "699"
        string_val: "227"
        string_val: "425"
        string_val: "694"
        string_val: "426"
        string_val: "701"
        string_val: "700"
        string_val: "686"
        string_val: "234"
        string_val: "432"
        string_val: "433"
        string_val: "228"
        string_val: "440"
        string_val: "441"
        string_val: "439"
        string_val: "438"
        string_val: "232"
        string_val: "721"
        string_val: "442"
        string_val: "726"
        string_val: "231"
        string_val: "708"
        string_val: "712"
        string_val: "929"
        string_val: "422"
        string_val: "220"
        string_val: "672"
        string_val: "673"
        string_val: "919"
        string_val: "657"
        string_val: "416"
        string_val: "414"
        string_val: "431"
        string_val: "427"
        string_val: "434"
        string_val: "704"
        string_val: "931"
        string_val: "644"
        string_val: "643"
        string_val: "653"
        string_val: "213"
        string_val: "641"
        string_val: "610"
        string_val: "914"
        string_val: "640"
        string_val: "408"
        string_val: "915"
        string_val: "632"
        string_val: "404"
        string_val: "629"
        string_val: "908"
        string_val: "674"
        string_val: "667"
        string_val: "740"
        string_val: "454"
        string_val: "450"
        string_val: "406"
        string_val: "621"
        string_val: "628"
        string_val: "411"
        string_val: "435"
        string_val: "705"
        string_val: "658"
        string_val: "613"
        string_val: "682"
        string_val: "451"
        string_val: "922"
        string_val: "652"
        string_val: "695"
        string_val: "941"
        string_val: "677"
        string_val: "676"
        string_val: "678"
        string_val: "671"
        string_val: "693"
        string_val: "744"
        string_val: "748"
        string_val: "664"
        string_val: "421"
        string_val: "659"
        string_val: "702"
        string_val: "747"
        string_val: "714"
        string_val: "648"
        string_val: "649"
        string_val: "912"
        string_val: "924"
        string_val: "3601"
        string_val: "917"
        string_val: "3604"
        string_val: "654"
        string_val: "918"
        string_val: "656"
        string_val: "624"
        string_val: "626"
        string_val: "3803"
        string_val: "681"
        string_val: "730"
        string_val: "749"
        string_val: "745"
        string_val: "734"
        string_val: "729"
        string_val: "921"
        string_val: "713"
        string_val: "663"
        string_val: "662"
        string_val: "697"
        string_val: "717"
        string_val: "719"
        string_val: "716"
        string_val: "715"
        string_val: "725"
        string_val: "605"
        string_val: "607"
        string_val: "615"
        string_val: "733"
        string_val: "920"
        string_val: "913"
        string_val: "692"
        string_val: "691"
        string_val: "689"
        string_val: "706"
        string_val: "703"
        string_val: "655"
        string_val: "738"
        string_val: "618"
        string_val: "620"
        string_val: "934"
        string_val: "622"
        string_val: "696"
        string_val: "932"
        string_val: "752"
        string_val: "687"
        string_val: "684"
        string_val: "685"
        string_val: "750"
        string_val: "666"
        string_val: "731"
        string_val: "709"
        string_val: "937"
        string_val: "707"
        string_val: "711"
        string_val: "737"
        string_val: "935"
        string_val: "19513"
        string_val: "32010"
        string_val: "32120"
        string_val: "39617"
        string_val: "46404"
        string_val: "46407"
        string_val: "49047"
        string_val: "53370"
        string_val: "53844"
        string_val: "90750"
        string_val: "90752"
        string_val: "90753"
        string_val: "91017"
        string_val: "91018"
        string_val: "91019"
        string_val: "91028"
        string_val: "91382"
        string_val: "92297"
        string_val: "92311"
        string_val: "92319"
        string_val: "92407"
        string_val: "92412"
        string_val: "92414"
        string_val: "92507"
        string_val: "92508"
        string_val: "92521"
        string_val: "93301"
        string_val: "93303"
        string_val: "93308"
        string_val: "93309"
        string_val: "93641"
        string_val: "93703"
        string_val: "95710"
        string_val: "95711"
        string_val: "95771"
        string_val: "96005"
        string_val: "96100"
        string_val: "96408"
        string_val: "96410"
        string_val: "96898"
        string_val: "97347"
        string_val: "97527"
        string_val: "98704"
        string_val: "98805"
        string_val: "98809"
        string_val: "98811"
        string_val: "99068"
        string_val: "99403"
        string_val: "99578"
        string_val: "99618"
        string_val: "99621"
        string_val: "99639"
        string_val: "99674"
        string_val: "99675"
        string_val: "98702"
        string_val: "99902"
        string_val: "16"
        string_val: "1002"
        string_val: "1005"
        string_val: "1006"
        string_val: "1011"
        string_val: "1014"
        string_val: "1018"
        string_val: "1026"
        string_val: "1033"
        string_val: "1038"
        string_val: "1045"
        string_val: "1061"
        string_val: "2002"
        string_val: "2016"
        string_val: "2020"
        string_val: "2021"
        string_val: "2022"
        string_val: "2026"
        string_val: "2028"
        string_val: "2033"
        string_val: "2037"
        string_val: "2041"
        string_val: "2050"
        string_val: "2058"
        string_val: "2061"
        string_val: "2067"
        string_val: "2068"
        string_val: "2069"
        string_val: "2076"
        string_val: "2078"
        string_val: "2087"
        string_val: "2090"
        string_val: "2092"
        string_val: "2094"
        string_val: "2100"
        string_val: "2106"
        string_val: "2113"
        string_val: "3001"
        string_val: "3009"
        string_val: "3010"
        string_val: "3015"
        string_val: "3016"
        string_val: "3017"
        string_val: "3019"
        string_val: "3021"
        string_val: "3026"
        string_val: "3027"
        string_val: "3028"
        string_val: "3033"
        string_val: "3036"
        string_val: "3038"
        string_val: "3042"
        string_val: "3043"
        string_val: "3044"
        string_val: "3045"
        string_val: "3047"
        string_val: "3050"
        string_val: "3052"
        string_val: "3053"
        string_val: "3054"
        string_val: "3057"
        string_val: "3058"
        string_val: "3065"
        string_val: "3067"
        string_val: "3070"
        string_val: "3071"
        string_val: "3072"
        string_val: "3073"
        string_val: "3075"
        string_val: "3080"
        string_val: "3083"
        string_val: "3084"
        string_val: "3085"
        string_val: "3091"
        string_val: "3094"
        string_val: "3095"
        string_val: "3096"
        string_val: "3098"
        string_val: "3101"
        string_val: "3102"
        string_val: "3103"
        string_val: "3110"
        string_val: "3113"
        string_val: "3116"
        string_val: "3117"
        string_val: "3119"
        string_val: "3121"
        string_val: "3126"
        string_val: "4003"
        string_val: "4006"
        string_val: "4008"
        string_val: "4009"
        string_val: "4016"
        string_val: "4026"
        string_val: "4029"
        string_val: "4035"
        string_val: "4036"
        string_val: "4054"
        string_val: "4060"
        string_val: "4075"
        string_val: "4077"
        string_val: "4081"
        string_val: "4089"
        string_val: "5022"
        string_val: "5031"
        string_val: "5067"
        string_val: "5083"
        string_val: "5122"
        string_val: "5139"
        string_val: "5143"
        string_val: "5145"
        string_val: "5160"
        string_val: "6002"
        string_val: "6009"
        string_val: "6010"
        string_val: "6013"
        string_val: "6014"
        string_val: "6018"
        string_val: "6021"
        string_val: "6022"
        string_val: "6027"
        string_val: "6029"
        string_val: "6030"
        string_val: "6032"
        string_val: "6047"
        string_val: "6049"
        string_val: "6053"
        string_val: "6054"
        string_val: "6056"
        string_val: "6057"
        string_val: "6071"
        string_val: "6075"
        string_val: "6077"
        string_val: "6088"
        string_val: "6093"
        string_val: "6103"
        string_val: "6104"
        string_val: "6112"
        string_val: "6121"
        string_val: "6125"
        string_val: "6127"
        string_val: "6129"
        string_val: "6134"
        string_val: "6160"
        string_val: "6164"
        string_val: "6168"
        string_val: "6169"
        string_val: "7001"
        string_val: "7007"
        string_val: "7010"
        string_val: "7012"
        string_val: "7018"
        string_val: "7020"
        string_val: "7023"
        string_val: "8001"
        string_val: "8017"
        string_val: "8027"
        string_val: "8028"
        string_val: "8031"
        string_val: "8033"
        string_val: "8048"
        string_val: "8052"
        string_val: "8057"
        string_val: "8093"
        string_val: "8096"
        string_val: "9001"
        string_val: "9002"
        string_val: "9010"
        string_val: "9011"
        string_val: "9014"
        string_val: "9015"
        string_val: "9019"
        string_val: "9022"
        string_val: "9024"
        string_val: "9028"
        string_val: "9029"
        string_val: "9033"
        string_val: "9034"
        string_val: "9044"
        string_val: "9048"
        string_val: "9071"
        string_val: "9074"
        string_val: "9076"
        string_val: "9088"
        string_val: "9092"
        string_val: "9097"
        string_val: "9098"
        string_val: "9099"
        string_val: "9107"
        string_val: "9113"
        string_val: "9116"
        string_val: "9118"
        string_val: "9119"
        string_val: "9121"
        string_val: "9125"
        string_val: "9135"
        string_val: "9137"
        string_val: "9145"
        string_val: "9146"
        string_val: "9151"
        string_val: "9156"
        string_val: "9157"
        string_val: "9161"
        string_val: "9167"
        string_val: "9169"
        string_val: "9173"
        string_val: "9175"
        string_val: "9179"
        string_val: "9188"
        string_val: "9191"
        string_val: "9192"
        string_val: "9196"
        string_val: "9197"
        string_val: "9198"
        string_val: "9202"
        string_val: "9206"
        string_val: "9207"
        string_val: "9214"
        string_val: "10003"
        string_val: "10013"
        string_val: "11009"
        string_val: "11051"
        string_val: "12001"
        string_val: "12005"
        string_val: "12007"
        string_val: "12013"
        string_val: "12019"
        string_val: "12021"
        string_val: "12023"
        string_val: "12033"
        string_val: "12040"
        string_val: "12051"
        string_val: "13001"
        string_val: "13002"
        string_val: "13003"
        string_val: "13007"
        string_val: "13009"
        string_val: "13011"
        string_val: "14001"
        string_val: "14002"
        string_val: "14003"
        string_val: "14006"
        string_val: "14008"
        string_val: "14009"
        string_val: "14017"
        string_val: "14020"
        string_val: "14022"
        string_val: "14025"
        string_val: "14027"
        string_val: "14028"
        string_val: "14030"
        string_val: "14031"
        string_val: "15003"
        string_val: "15004"
        string_val: "15005"
        string_val: "15006"
        string_val: "15007"
        string_val: "15009"
        string_val: "15010"
        string_val: "15014"
        string_val: "15015"
        string_val: "15019"
        string_val: "15025"
        string_val: "15026"
        string_val: "15029"
        string_val: "15033"
        string_val: "15034"
        string_val: "15038"
        string_val: "15041"
        string_val: "15046"
        string_val: "15047"
        string_val: "15052"
        string_val: "15054"
        string_val: "15058"
        string_val: "15059"
        string_val: "15061"
        string_val: "15062"
        string_val: "15064"
        string_val: "15067"
        string_val: "15069"
        string_val: "15077"
        string_val: "15079"
        string_val: "15084"
        string_val: "15092"
        string_val: "15094"
        string_val: "15099"
        string_val: "15101"
        string_val: "15103"
        string_val: "15106"
        string_val: "15108"
        string_val: "15110"
        string_val: "15113"
        string_val: "15116"
        string_val: "16014"
        string_val: "16019"
        string_val: "16050"
        string_val: "16052"
        string_val: "16056"
        string_val: "16061"
        string_val: "16076"
        string_val: "16085"
        string_val: "16092"
        string_val: "16095"
        string_val: "16131"
        string_val: "16136"
        string_val: "16138"
        string_val: "16146"
        string_val: "16157"
        string_val: "16176"
        string_val: "17003"
        string_val: "17004"
        string_val: "17009"
        string_val: "17011"
        string_val: "17017"
        string_val: "17018"
        string_val: "17022"
        string_val: "17027"
        string_val: "17028"
        string_val: "17030"
        string_val: "17031"
        string_val: "17033"
        string_val: "17035"
        string_val: "17047"
        string_val: "17052"
        string_val: "17055"
        string_val: "17064"
        string_val: "17073"
        string_val: "17075"
        string_val: "17076"
        string_val: "17082"
        string_val: "17084"
        string_val: "17085"
        string_val: "17087"
        string_val: "17089"
        string_val: "17090"
        string_val: "17094"
        string_val: "17096"
        string_val: "17098"
        string_val: "17101"
        string_val: "18001"
        string_val: "18002"
        string_val: "18003"
        string_val: "18005"
        string_val: "18007"
        string_val: "18009"
        string_val: "18010"
        string_val: "18011"
        string_val: "18016"
        string_val: "18018"
        string_val: "18021"
        string_val: "18023"
        string_val: "18025"
        string_val: "18028"
        string_val: "18029"
        string_val: "18030"
        string_val: "18032"
        string_val: "18033"
        string_val: "18040"
        string_val: "18043"
        string_val: "18045"
        string_val: "18047"
        string_val: "18052"
        string_val: "18059"
        string_val: "18060"
        string_val: "18061"
        string_val: "18062"
        string_val: "18065"
        string_val: "18066"
        string_val: "18067"
        string_val: "18069"
        string_val: "18072"
        string_val: "18075"
        string_val: "18077"
        string_val: "18078"
        string_val: "18079"
        string_val: "18081"
        string_val: "18082"
        string_val: "18084"
        string_val: "18085"
        string_val: "18087"
        string_val: "18091"
        string_val: "18095"
        string_val: "18097"
        string_val: "18101"
        string_val: "18102"
        string_val: "18105"
        string_val: "18106"
        string_val: "18111"
        string_val: "18114"
        string_val: "18116"
        string_val: "18117"
        string_val: "18119"
        string_val: "18120"
        string_val: "19004"
        string_val: "19005"
        string_val: "19008"
        string_val: "19017"
        string_val: "19025"
        string_val: "19032"
        string_val: "19035"
        string_val: "19038"
        string_val: "19043"
        string_val: "19046"
        string_val: "19050"
        string_val: "19070"
        string_val: "19094"
        string_val: "19118"
        string_val: "19120"
        string_val: "19126"
        string_val: "19127"
        string_val: "19140"
        string_val: "19144"
        string_val: "19145"
        string_val: "19146"
        string_val: "19150"
        string_val: "19152"
        string_val: "19157"
        string_val: "19162"
        string_val: "19168"
        string_val: "19169"
        string_val: "19172"
        string_val: "19182"
        string_val: "20003"
        string_val: "20013"
        string_val: "20018"
        string_val: "20024"
        string_val: "20033"
        string_val: "20043"
        string_val: "20045"
        string_val: "20047"
        string_val: "20053"
        string_val: "20068"
        string_val: "20071"
        string_val: "20074"
        string_val: "20084"
        string_val: "20098"
        string_val: "20102"
        string_val: "20105"
        string_val: "20110"
        string_val: "20113"
        string_val: "21003"
        string_val: "21004"
        string_val: "21005"
        string_val: "21007"
        string_val: "21010"
        string_val: "21011"
        string_val: "21017"
        string_val: "21023"
        string_val: "21028"
        string_val: "21029"
        string_val: "21030"
        string_val: "21031"
        string_val: "21037"
        string_val: "21040"
        string_val: "21045"
        string_val: "21048"
        string_val: "21049"
        string_val: "21052"
        string_val: "21054"
        string_val: "21055"
        string_val: "21057"
        string_val: "21058"
        string_val: "21059"
        string_val: "21063"
        string_val: "21064"
        string_val: "21068"
        string_val: "21069"
        string_val: "21070"
        string_val: "21071"
        string_val: "21072"
        string_val: "21073"
        string_val: "21075"
        string_val: "21078"
        string_val: "22007"
        string_val: "22009"
        string_val: "22015"
        string_val: "22016"
        string_val: "22024"
        string_val: "22034"
        string_val: "22037"
        string_val: "23004"
        string_val: "23008"
        string_val: "23013"
        string_val: "23023"
        string_val: "23034"
        string_val: "23042"
        string_val: "23043"
        string_val: "23056"
        string_val: "23058"
        string_val: "23062"
        string_val: "23068"
        string_val: "23070"
        string_val: "23075"
        string_val: "23076"
        string_val: "23088"
        string_val: "23089"
        string_val: "23102"
        string_val: "23109"
        string_val: "23116"
        string_val: "23119"
        string_val: "23136"
        string_val: "23137"
        string_val: "23138"
        string_val: "23148"
        string_val: "23155"
        string_val: "23158"
        string_val: "23164"
        string_val: "24001"
        string_val: "24005"
        string_val: "24019"
        string_val: "24020"
        string_val: "26001"
        string_val: "26007"
        string_val: "26013"
        string_val: "26015"
        string_val: "26017"
        string_val: "26019"
        string_val: "26030"
        string_val: "26034"
        string_val: "26035"
        string_val: "26043"
        string_val: "26058"
        string_val: "27002"
        string_val: "27007"
        string_val: "27015"
        string_val: "27016"
        string_val: "27018"
        string_val: "27020"
        string_val: "27026"
        string_val: "27028"
        string_val: "27029"
        string_val: "27031"
        string_val: "27032"
        string_val: "27034"
        string_val: "27035"
        string_val: "27036"
        string_val: "27037"
        string_val: "27048"
        string_val: "27050"
        string_val: "27051"
        string_val: "27052"
        string_val: "27053"
        string_val: "27054"
        string_val: "27057"
        string_val: "27059"
        string_val: "27060"
        string_val: "27061"
        string_val: "27062"
        string_val: "28010"
        string_val: "28011"
        string_val: "28020"
        string_val: "28033"
        string_val: "28035"
        string_val: "28037"
        string_val: "28039"
        string_val: "28045"
        string_val: "28051"
        string_val: "28060"
        string_val: "28061"
        string_val: "28071"
        string_val: "28079"
        string_val: "28080"
        string_val: "28083"
        string_val: "28085"
        string_val: "28100"
        string_val: "28111"
        string_val: "28112"
        string_val: "28113"
        string_val: "28117"
        string_val: "28121"
        string_val: "28124"
        string_val: "28126"
        string_val: "28127"
        string_val: "28135"
        string_val: "28136"
        string_val: "28151"
        string_val: "28152"
        string_val: "28158"
        string_val: "28161"
        string_val: "28165"
        string_val: "28172"
        string_val: "28173"
        string_val: "28179"
        string_val: "28180"
        string_val: "28185"
        string_val: "28188"
        string_val: "28192"
        string_val: "28193"
        string_val: "28194"
        string_val: "29002"
        string_val: "29059"
        string_val: "30010"
        string_val: "30012"
        string_val: "30016"
        string_val: "30018"
        string_val: "30021"
        string_val: "30022"
        string_val: "34012"
        string_val: "34057"
        string_val: "35018"
        string_val: "35023"
        string_val: "35027"
        string_val: "35035"
        string_val: "35038"
        string_val: "35040"
        string_val: "35041"
        string_val: "35046"
        string_val: "35048"
        string_val: "35056"
        string_val: "35060"
        string_val: "36006"
        string_val: "36008"
        string_val: "36009"
        string_val: "36016"
        string_val: "36022"
        string_val: "36023"
        string_val: "36024"
        string_val: "36031"
        string_val: "36036"
        string_val: "36041"
        string_val: "36044"
        string_val: "36053"
        string_val: "36061"
        string_val: "36062"
        string_val: "36063"
        string_val: "36083"
        string_val: "36085"
        string_val: "36088"
        string_val: "36093"
        string_val: "36099"
        string_val: "36100"
        string_val: "36106"
        string_val: "36107"
        string_val: "36109"
        string_val: "36115"
        string_val: "36117"
        string_val: "36118"
        string_val: "36125"
        string_val: "36128"
        string_val: "36129"
        string_val: "36132"
        string_val: "36134"
        string_val: "37002"
        string_val: "37005"
        string_val: "37011"
        string_val: "37012"
        string_val: "37013"
        string_val: "37016"
        string_val: "37021"
        string_val: "37022"
        string_val: "37025"
        string_val: "37028"
        string_val: "37037"
        string_val: "37039"
        string_val: "37044"
        string_val: "37051"
        string_val: "37053"
        string_val: "37061"
        string_val: "37062"
        string_val: "37064"
        string_val: "37069"
        string_val: "37080"
        string_val: "37083"
        string_val: "37091"
        string_val: "37092"
        string_val: "37105"
        string_val: "37107"
        string_val: "37108"
        string_val: "37119"
        string_val: "37128"
        string_val: "37153"
        string_val: "38003"
        string_val: "38006"
        string_val: "38015"
        string_val: "38018"
        string_val: "38024"
        string_val: "38036"
        string_val: "38038"
        string_val: "38043"
        string_val: "38059"
        string_val: "38074"
        string_val: "38075"
        string_val: "38091"
        string_val: "38099"
        string_val: "38100"
        string_val: "38116"
        string_val: "38117"
        string_val: "38121"
        string_val: "38122"
        string_val: "38126"
        string_val: "38140"
        string_val: "38150"
        string_val: "38165"
        string_val: "38167"
        string_val: "38170"
        string_val: "38193"
        string_val: "38217"
        string_val: "38220"
        string_val: "38221"
        string_val: "38233"
        string_val: "38237"
        string_val: "38241"
        string_val: "38243"
        string_val: "38248"
        string_val: "38249"
        string_val: "38251"
        string_val: "38255"
        string_val: "38258"
        string_val: "38265"
        string_val: "38269"
        string_val: "38271"
        string_val: "38275"
        string_val: "38278"
        string_val: "38281"
        string_val: "38285"
        string_val: "38287"
        string_val: "38290"
        string_val: "38291"
        string_val: "38292"
        string_val: "38302"
        string_val: "38305"
        string_val: "38307"
        string_val: "38309"
        string_val: "38310"
        string_val: "38319"
        string_val: "38320"
        string_val: "38322"
        string_val: "38344"
        string_val: "38345"
        string_val: "38346"
        string_val: "38349"
        string_val: "39002"
        string_val: "39004"
        string_val: "39008"
        string_val: "39009"
        string_val: "39012"
        string_val: "39014"
        string_val: "39015"
        string_val: "39017"
        string_val: "39019"
        string_val: "39020"
        string_val: "39022"
        string_val: "39023"
        string_val: "39025"
        string_val: "39027"
        string_val: "39028"
        string_val: "39032"
        string_val: "39039"
        string_val: "39042"
        string_val: "39045"
        string_val: "39051"
        string_val: "39053"
        string_val: "39058"
        string_val: "39059"
        string_val: "39063"
        string_val: "39064"
        string_val: "39067"
        string_val: "39071"
        string_val: "39074"
        string_val: "39077"
        string_val: "40003"
        string_val: "40005"
        string_val: "40008"
        string_val: "40009"
        string_val: "40010"
        string_val: "40011"
        string_val: "41001"
        string_val: "41011"
        string_val: "41015"
        string_val: "41019"
        string_val: "41027"
        string_val: "41031"
        string_val: "41032"
        string_val: "41037"
        string_val: "41045"
        string_val: "41061"
        string_val: "41064"
        string_val: "41065"
        string_val: "42002"
        string_val: "42009"
        string_val: "42011"
        string_val: "42013"
        string_val: "42015"
        string_val: "42018"
        string_val: "42019"
        string_val: "42020"
        string_val: "42027"
        string_val: "42028"
        string_val: "42030"
        string_val: "42033"
        string_val: "42038"
        string_val: "42043"
        string_val: "42045"
        string_val: "42046"
        string_val: "42050"
        string_val: "42051"
        string_val: "42054"
        string_val: "42056"
        string_val: "42057"
        string_val: "42058"
        string_val: "42059"
        string_val: "42063"
        string_val: "42064"
        string_val: "42066"
        string_val: "42068"
        string_val: "42069"
        string_val: "42070"
        string_val: "42073"
        string_val: "42074"
        string_val: "42075"
        string_val: "42077"
        string_val: "42082"
        string_val: "42083"
        string_val: "42084"
        string_val: "42085"
        string_val: "42086"
        string_val: "42087"
        string_val: "42089"
        string_val: "42092"
        string_val: "42094"
        string_val: "42095"
        string_val: "42097"
        string_val: "42099"
        string_val: "42103"
        string_val: "42104"
        string_val: "42106"
        string_val: "42107"
        string_val: "42108"
        string_val: "42109"
        string_val: "42110"
        string_val: "42112"
        string_val: "42115"
        string_val: "42116"
        string_val: "42117"
        string_val: "42118"
        string_val: "42119"
        string_val: "42122"
        string_val: "42123"
        string_val: "42124"
        string_val: "42125"
        string_val: "42129"
        string_val: "42133"
        string_val: "42136"
        string_val: "42138"
        string_val: "42143"
        string_val: "42144"
        string_val: "42147"
        string_val: "42148"
        string_val: "42149"
        string_val: "42154"
        string_val: "42156"
        string_val: "42162"
        string_val: "42164"
        string_val: "42165"
        string_val: "42169"
        string_val: "42170"
        string_val: "42171"
        string_val: "42173"
        string_val: "42176"
        string_val: "42181"
        string_val: "42183"
        string_val: "42184"
        string_val: "42186"
        string_val: "42187"
        string_val: "42189"
        string_val: "42192"
        string_val: "42193"
        string_val: "42194"
        string_val: "42196"
        string_val: "42197"
        string_val: "42198"
        string_val: "42199"
        string_val: "42203"
        string_val: "42206"
        string_val: "42207"
        string_val: "42209"
        string_val: "42210"
        string_val: "42221"
        string_val: "42223"
        string_val: "42224"
        string_val: "43005"
        string_val: "43008"
        string_val: "43021"
        string_val: "43024"
        string_val: "43027"
        string_val: "43033"
        string_val: "43034"
        string_val: "43040"
        string_val: "44001"
        string_val: "44004"
        string_val: "44005"
        string_val: "44018"
        string_val: "44022"
        string_val: "44028"
        string_val: "44030"
        string_val: "44035"
        string_val: "44040"
        string_val: "44050"
        string_val: "44052"
        string_val: "44057"
        string_val: "44064"
        string_val: "44070"
        string_val: "44072"
        string_val: "44073"
        string_val: "44075"
        string_val: "44076"
        string_val: "44079"
        string_val: "44088"
        string_val: "44092"
        string_val: "44096"
        string_val: "45003"
        string_val: "45007"
        string_val: "45009"
        string_val: "45013"
        string_val: "45014"
        string_val: "45015"
        string_val: "45025"
        string_val: "45028"
        string_val: "45032"
        string_val: "45041"
        string_val: "46004"
        string_val: "46021"
        string_val: "46022"
        string_val: "46028"
        string_val: "46029"
        string_val: "46045"
        string_val: "46057"
        string_val: "46058"
        string_val: "46060"
        string_val: "46074"
        string_val: "46088"
        string_val: "46089"
        string_val: "47002"
        string_val: "47004"
        string_val: "47005"
        string_val: "47006"
        string_val: "47015"
        string_val: "47016"
        string_val: "47023"
        string_val: "47027"
        string_val: "47033"
        string_val: "47047"
        string_val: "47050"
        string_val: "47053"
        string_val: "47058"
        string_val: "47061"
        string_val: "47066"
        string_val: "47071"
        string_val: "47073"
        string_val: "47077"
        string_val: "47079"
        string_val: "47086"
        string_val: "47096"
        string_val: "47102"
        string_val: "47108"
        string_val: "47110"
        string_val: "47113"
        string_val: "47120"
        string_val: "47124"
        string_val: "48015"
        string_val: "48018"
        string_val: "48029"
        string_val: "48059"
        string_val: "48063"
        string_val: "48074"
        string_val: "48076"
        string_val: "48078"
        string_val: "48111"
        string_val: "48136"
        string_val: "48144"
        string_val: "48152"
        string_val: "49002"
        string_val: "49003"
        string_val: "49005"
        string_val: "49006"
        string_val: "49008"
        string_val: "49012"
        string_val: "49014"
        string_val: "49015"
        string_val: "49016"
        string_val: "49022"
        string_val: "49024"
        string_val: "49028"
        string_val: "49030"
        string_val: "50002"
        string_val: "50003"
        string_val: "50004"
        string_val: "50006"
        string_val: "50007"
        string_val: "50008"
        string_val: "50010"
        string_val: "50011"
        string_val: "50012"
        string_val: "50013"
        string_val: "50014"
        string_val: "50017"
        string_val: "50018"
        string_val: "50019"
        string_val: "50023"
        string_val: "50024"
        string_val: "50025"
        string_val: "50026"
        string_val: "50028"
        string_val: "50029"
        string_val: "50032"
        string_val: "50034"
        string_val: "50036"
        string_val: "50038"
        string_val: "50039"
        string_val: "50040"
        string_val: "50044"
        string_val: "50045"
        string_val: "50046"
        string_val: "50047"
        string_val: "50050"
        string_val: "50051"
        string_val: "50053"
        string_val: "50055"
        string_val: "50057"
        string_val: "50060"
        string_val: "50063"
        string_val: "50067"
        string_val: "50068"
        string_val: "50071"
        string_val: "50072"
        string_val: "50075"
        string_val: "50076"
        string_val: "50078"
        string_val: "50084"
        string_val: "50088"
        string_val: "50089"
        string_val: "50090"
        string_val: "50091"
        string_val: "50093"
        string_val: "50094"
        string_val: "50098"
        string_val: "50099"
        string_val: "50107"
        string_val: "50111"
        string_val: "50112"
        string_val: "50114"
        string_val: "50116"
        string_val: "50117"
        string_val: "50118"
        string_val: "50119"
        string_val: "50120"
        string_val: "50121"
        string_val: "50123"
        string_val: "50125"
        string_val: "50126"
        string_val: "50129"
        string_val: "50130"
        string_val: "50132"
        string_val: "51004"
        string_val: "51005"
        string_val: "51007"
        string_val: "51010"
        string_val: "51011"
        string_val: "51012"
        string_val: "51013"
        string_val: "51014"
        string_val: "51017"
        string_val: "51018"
        string_val: "51019"
        string_val: "51020"
        string_val: "51022"
        string_val: "51023"
        string_val: "51024"
        string_val: "51028"
        string_val: "51029"
        string_val: "51031"
        string_val: "51033"
        string_val: "51035"
        string_val: "51038"
        string_val: "51042"
        string_val: "51051"
        string_val: "51053"
        string_val: "51055"
        string_val: "51060"
        string_val: "51061"
        string_val: "51063"
        string_val: "51065"
        string_val: "51069"
        string_val: "51072"
        string_val: "51077"
        string_val: "51078"
        string_val: "51079"
        string_val: "51080"
        string_val: "51081"
        string_val: "51083"
        string_val: "51087"
        string_val: "51090"
        string_val: "51093"
        string_val: "51097"
        string_val: "52002"
        string_val: "52003"
        string_val: "52009"
        string_val: "52010"
        string_val: "52013"
        string_val: "52014"
        string_val: "52015"
        string_val: "52017"
        string_val: "52018"
        string_val: "52021"
        string_val: "52022"
        string_val: "52023"
        string_val: "52025"
        string_val: "52026"
        string_val: "52027"
        string_val: "52029"
        string_val: "52038"
        string_val: "52039"
        string_val: "52040"
        string_val: "52042"
        string_val: "52044"
        string_val: "52045"
        string_val: "52046"
        string_val: "52047"
        string_val: "52048"
        string_val: "52052"
        string_val: "52053"
        string_val: "52055"
        string_val: "52057"
        string_val: "52059"
        string_val: "52060"
        string_val: "52064"
        string_val: "52068"
        string_val: "52072"
        string_val: "52073"
        string_val: "52082"
        string_val: "52087"
        string_val: "52091"
        string_val: "52095"
        string_val: "52099"
        string_val: "52101"
        string_val: "52104"
        string_val: "52106"
        string_val: "52107"
        string_val: "52110"
        string_val: "52115"
        string_val: "52116"
        string_val: "52122"
        string_val: "52123"
        string_val: "53009"
        string_val: "53010"
        string_val: "53011"
        string_val: "53023"
        string_val: "53029"
        string_val: "53030"
        string_val: "53033"
        string_val: "53034"
        string_val: "53036"
        string_val: "53038"
        string_val: "53044"
        string_val: "53048"
        string_val: "53049"
        string_val: "53053"
        string_val: "53057"
        string_val: "53063"
        string_val: "53071"
        string_val: "53079"
        string_val: "53100"
        string_val: "53103"
        string_val: "53106"
        string_val: "53108"
        string_val: "53115"
        string_val: "53116"
        string_val: "53117"
        string_val: "53120"
        string_val: "53124"
        string_val: "53125"
        string_val: "53126"
        string_val: "53135"
        string_val: "53138"
        string_val: "53139"
        string_val: "53144"
        string_val: "53146"
        string_val: "53147"
        string_val: "53155"
        string_val: "53159"
        string_val: "53160"
        string_val: "53162"
        string_val: "53163"
        string_val: "53166"
        string_val: "53176"
        string_val: "53178"
        string_val: "53185"
        string_val: "54002"
        string_val: "54003"
        string_val: "54005"
        string_val: "54007"
        string_val: "54009"
        string_val: "54011"
        string_val: "54018"
        string_val: "54021"
        string_val: "54026"
        string_val: "54028"
        string_val: "54031"
        string_val: "54033"
        string_val: "54034"
        string_val: "54035"
        string_val: "54038"
        string_val: "54046"
        string_val: "54047"
        string_val: "54050"
        string_val: "54051"
        string_val: "54052"
        string_val: "54053"
        string_val: "54054"
        string_val: "54055"
        string_val: "54057"
        string_val: "54060"
        string_val: "54061"
        string_val: "54067"
        string_val: "54068"
        string_val: "54069"
        string_val: "54071"
        string_val: "54076"
        string_val: "54077"
        string_val: "54078"
        string_val: "54081"
        string_val: "54083"
        string_val: "54096"
        string_val: "54099"
        string_val: "54100"
        string_val: "54105"
        string_val: "54112"
        string_val: "54113"
        string_val: "54118"
        string_val: "54119"
        string_val: "54122"
        string_val: "54126"
        string_val: "54127"
        string_val: "54129"
        string_val: "54135"
        string_val: "54136"
        string_val: "54138"
        string_val: "54139"
        string_val: "54141"
        string_val: "54143"
        string_val: "54147"
        string_val: "54148"
        string_val: "54151"
        string_val: "54153"
        string_val: "54156"
        string_val: "54158"
        string_val: "54164"
        string_val: "54166"
        string_val: "54167"
        string_val: "54170"
        string_val: "54171"
        string_val: "54172"
        string_val: "54179"
        string_val: "54182"
        string_val: "54183"
        string_val: "54186"
        string_val: "54189"
        string_val: "54191"
        string_val: "54228"
        string_val: "55002"
        string_val: "55010"
        string_val: "55015"
        string_val: "55018"
        string_val: "55019"
        string_val: "55029"
        string_val: "55040"
        string_val: "55048"
        string_val: "55061"
        string_val: "55063"
        string_val: "55069"
        string_val: "55076"
        string_val: "55090"
        string_val: "55095"
        string_val: "55099"
        string_val: "55104"
        string_val: "55109"
        string_val: "55114"
        string_val: "55117"
        string_val: "56003"
        string_val: "56006"
        string_val: "56009"
        string_val: "56011"
        string_val: "56016"
        string_val: "57002"
        string_val: "57010"
        string_val: "57014"
        string_val: "57016"
        string_val: "57020"
        string_val: "57027"
        string_val: "57029"
        string_val: "57035"
        string_val: "57037"
        string_val: "57041"
        string_val: "57044"
        string_val: "57045"
        string_val: "57053"
        string_val: "57061"
        string_val: "57065"
        string_val: "57067"
        string_val: "57072"
        string_val: "57083"
        string_val: "57087"
        string_val: "57112"
        string_val: "57123"
        string_val: "57126"
        string_val: "57135"
        string_val: "57144"
        string_val: "57147"
        string_val: "57148"
        string_val: "57154"
        string_val: "57160"
        string_val: "57165"
        string_val: "57167"
        string_val: "57171"
        string_val: "57177"
        string_val: "57178"
        string_val: "57180"
        string_val: "57185"
        string_val: "57191"
        string_val: "57192"
        string_val: "57193"
        string_val: "57195"
        string_val: "57196"
        string_val: "57197"
        string_val: "57202"
        string_val: "57208"
        string_val: "57213"
        string_val: "58006"
        string_val: "58016"
        string_val: "58020"
        string_val: "58022"
        string_val: "58024"
        string_val: "58027"
        string_val: "58032"
        string_val: "59002"
        string_val: "59003"
        string_val: "59005"
        string_val: "59007"
        string_val: "59008"
        string_val: "59009"
        string_val: "59012"
        string_val: "59015"
        string_val: "59016"
        string_val: "59020"
        string_val: "59022"
        string_val: "59023"
        string_val: "59025"
        string_val: "59026"
        string_val: "59029"
        string_val: "59033"
        string_val: "59034"
        string_val: "59037"
        string_val: "59039"
        string_val: "60001"
        string_val: "60002"
        string_val: "60003"
        string_val: "60005"
        string_val: "60007"
        string_val: "60010"
        string_val: "60013"
        string_val: "60016"
        string_val: "60017"
        string_val: "60019"
        string_val: "60021"
        string_val: "60022"
        string_val: "60025"
        string_val: "60026"
        string_val: "60027"
        string_val: "60028"
        string_val: "60040"
        string_val: "61005"
        string_val: "61008"
        string_val: "61009"
        string_val: "61014"
        string_val: "61018"
        string_val: "61022"
        string_val: "61023"
        string_val: "61030"
        string_val: "61031"
        string_val: "61033"
        string_val: "61035"
        string_val: "61047"
        string_val: "61052"
        string_val: "61055"
        string_val: "61056"
        string_val: "61061"
        string_val: "61062"
        string_val: "61063"
        string_val: "62001"
        string_val: "62003"
        string_val: "62006"
        string_val: "62012"
        string_val: "62015"
        string_val: "62017"
        string_val: "62019"
        string_val: "62021"
        string_val: "62022"
        string_val: "62023"
        string_val: "62027"
        string_val: "62030"
        string_val: "62031"
        string_val: "62033"
        string_val: "62034"
        string_val: "62035"
        string_val: "62040"
        string_val: "62041"
        string_val: "62042"
        string_val: "62043"
        string_val: "62046"
        string_val: "62047"
        string_val: "62048"
        string_val: "62049"
        string_val: "62052"
        string_val: "62053"
        string_val: "62054"
        string_val: "62057"
        string_val: "62058"
        string_val: "62060"
        string_val: "62064"
        string_val: "62065"
        string_val: "62071"
        string_val: "62076"
        string_val: "62078"
        string_val: "62081"
        string_val: "62082"
        string_val: "62084"
        string_val: "62086"
        string_val: "62087"
        string_val: "62088"
        string_val: "62090"
        string_val: "62091"
        string_val: "62092"
        string_val: "62098"
        string_val: "62106"
        string_val: "62107"
        string_val: "64001"
        string_val: "64004"
        string_val: "64005"
        string_val: "64006"
        string_val: "64010"
        string_val: "64012"
        string_val: "64015"
        string_val: "64016"
        string_val: "64018"
        string_val: "64019"
        string_val: "64030"
        string_val: "64031"
        string_val: "64032"
        string_val: "64035"
        string_val: "64036"
        string_val: "64041"
        string_val: "64043"
        string_val: "64044"
        string_val: "64050"
        string_val: "64053"
        string_val: "64057"
        string_val: "64058"
        string_val: "64059"
        string_val: "64064"
        string_val: "64068"
        string_val: "64069"
        string_val: "64070"
        string_val: "64071"
        string_val: "64073"
        string_val: "64074"
        string_val: "64076"
        string_val: "64078"
        string_val: "64080"
        string_val: "64081"
        string_val: "64082"
        string_val: "64084"
        string_val: "65003"
        string_val: "65004"
        string_val: "65006"
        string_val: "65009"
        string_val: "65010"
        string_val: "65011"
        string_val: "65014"
        string_val: "65018"
        string_val: "65020"
        string_val: "65024"
        string_val: "65025"
        string_val: "65027"
        string_val: "65031"
        string_val: "65032"
        string_val: "65033"
        string_val: "65035"
        string_val: "65036"
        string_val: "65039"
        string_val: "65041"
        string_val: "65043"
        string_val: "65046"
        string_val: "65047"
        string_val: "65055"
        string_val: "65057"
        string_val: "65058"
        string_val: "65060"
        string_val: "65066"
        string_val: "68001"
        string_val: "68008"
        string_val: "68010"
        string_val: "68011"
        string_val: "68019"
        string_val: "3104"
        string_val: "4014"
        string_val: "4056"
        string_val: "4095"
        string_val: "5024"
        string_val: "6020"
        string_val: "6034"
        string_val: "6061"
        string_val: "6067"
        string_val: "6070"
        string_val: "6084"
        string_val: "6146"
        string_val: "9047"
        string_val: "9052"
        string_val: "10005"
        string_val: "13005"
        string_val: "14012"
        string_val: "15044"
        string_val: "15056"
        string_val: "15085"
        string_val: "17002"
        string_val: "17006"
        string_val: "17104"
        string_val: "17302"
        string_val: "17307"
        string_val: "18034"
        string_val: "18048"
        string_val: "18089"
        string_val: "19009"
        string_val: "22008"
        string_val: "23065"
        string_val: "26033"
        string_val: "27055"
        string_val: "28054"
        string_val: "28096"
        string_val: "36055"
        string_val: "37029"
        string_val: "37089"
        string_val: "37093"
        string_val: "37096"
        string_val: "37134"
        string_val: "38201"
        string_val: "38356"
        string_val: "40007"
        string_val: "44089"
        string_val: "45006"
        string_val: "46066"
        string_val: "48067"
        string_val: "49011"
        string_val: "49019"
        string_val: "50086"
        string_val: "50092"
        string_val: "51032"
        string_val: "51084"
        string_val: "51086"
        string_val: "52093"
        string_val: "53180"
        string_val: "54121"
        string_val: "56014"
        string_val: "57116"
        string_val: "57189"
        string_val: "58014"
        string_val: "60008"
        string_val: "60030"
        string_val: "61017"
        string_val: "61024"
        string_val: "61069"
        string_val: "62067"
        string_val: "64017"
        string_val: "64023"
        string_val: "64061"
        string_val: "64065"
        string_val: "64086"
        string_val: "65001"
        string_val: "65049"
        string_val: "1001"
        string_val: "3011"
        string_val: "3112"
        string_val: "6039"
        string_val: "6082"
        string_val: "6154"
        string_val: "7005"
        string_val: "8014"
        string_val: "11050"
        string_val: "14010"
        string_val: "14033"
        string_val: "15028"
        string_val: "16023"
        string_val: "16055"
        string_val: "17065"
        string_val: "17074"
        string_val: "18013"
        string_val: "26026"
        string_val: "36004"
        string_val: "36103"
        string_val: "37084"
        string_val: "37109"
        string_val: "38210"
        string_val: "38284"
        string_val: "38301"
        string_val: "39041"
        string_val: "41036"
        string_val: "42076"
        string_val: "42111"
        string_val: "42135"
        string_val: "44003"
        string_val: "44034"
        string_val: "45020"
        string_val: "45031"
        string_val: "48130"
        string_val: "50073"
        string_val: "55006"
        string_val: "55039"
        string_val: "57118"
        string_val: "58029"
        string_val: "59038"
        string_val: "60014"
        string_val: "64007"
        string_val: "64009"
        string_val: "64060"
        string_val: "2014"
        string_val: "6062"
        string_val: "6096"
        string_val: "6139"
        string_val: "10007"
        string_val: "12015"
        string_val: "14032"
        string_val: "18046"
        string_val: "20037"
        string_val: "21026"
        string_val: "22030"
        string_val: "28102"
        string_val: "28167"
        string_val: "29035"
        string_val: "35025"
        string_val: "36003"
        string_val: "37026"
        string_val: "38352"
        string_val: "41040"
        string_val: "43015"
        string_val: "43036"
        string_val: "44060"
        string_val: "45030"
        string_val: "47092"
        string_val: "50065"
        string_val: "58001"
        string_val: "58013"
        string_val: "58035"
        string_val: "64013"
        string_val: "64027"
        string_val: "64054"
        string_val: "64055"
        string_val: "64056"
        string_val: "64066"
        string_val: "68018"
        string_val: "1051"
        string_val: "3049"
        string_val: "3100"
        string_val: "6098"
        string_val: "6116"
        string_val: "6131"
        string_val: "18068"
        string_val: "19083"
        string_val: "19085"
        string_val: "20067"
        string_val: "23128"
        string_val: "30026"
        string_val: "37075"
        string_val: "37129"
        string_val: "38197"
        string_val: "43023"
        string_val: "58023"
        string_val: "59040"
        string_val: "60029"
        string_val: "62104"
        string_val: "64002"
        string_val: "64042"
        string_val: "4083"
        string_val: "6066"
        string_val: "6109"
        string_val: "9160"
        string_val: "13004"
        string_val: "18035"
        string_val: "18104"
        string_val: "20072"
        string_val: "21002"
        string_val: "21016"
        string_val: "22023"
        string_val: "28024"
        string_val: "28077"
        string_val: "28181"
        string_val: "34037"
        string_val: "36018"
        string_val: "37057"
        string_val: "38060"
        string_val: "41038"
        string_val: "44006"
        string_val: "46013"
        string_val: "50124"
        string_val: "51056"
        string_val: "51076"
        string_val: "53149"
        string_val: "54098"
        string_val: "64008"
        string_val: "6089"
        string_val: "11003"
        string_val: "28000"
        string_val: "28013"
        string_val: "36076"
        string_val: "40002"
        string_val: "53043"
        string_val: "54150"
        string_val: "60004"
        string_val: "64037"
        string_val: "2024"
        string_val: "19138"
        string_val: "28050"
        string_val: "48050"
        string_val: "50074"
        string_val: "54120"
        string_val: "64028"
        string_val: "64051"
        string_val: "64052"
        string_val: "2004"
        string_val: "5133"
        string_val: "6038"
        string_val: "27019"
        string_val: "36136"
        string_val: "68016"
        string_val: "68029"
        string_val: "55101"
        string_val: "64040"
        string_val: "17042"
        string_val: "36080"
        string_val: "37048"
        string_val: "6015"
        string_val: "22005"
        string_val: "15024"
        string_val: "22029"
        string_val: "53181"
        string_val: "11016"
        string_val: "19087"
        string_val: "50122"
        string_val: "2031"
        string_val: "50022"
        string_val: "68012"
        string_val: "9193"
        string_val: "62079"
        string_val: "64033"
        string_val: "40006"
        string_val: "22028"
        string_val: "22038"
        string_val: "8065"
        string_val: "25001"
        string_val: "18076"
        string_val: "18113"
        string_val: "28177"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2327
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2327
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2327
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2327
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 2327
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2327
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\027\t\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2327
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2327
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:7"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1579
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1579
          }
        }
        string_val: "0"
        string_val: "1"
        string_val: "2"
        string_val: "3"
        string_val: "4"
        string_val: "5"
        string_val: "6"
        string_val: "7"
        string_val: "8"
        string_val: "9"
        string_val: "10"
        string_val: "11"
        string_val: "12"
        string_val: "13"
        string_val: "14"
        string_val: "15"
        string_val: "16"
        string_val: "17"
        string_val: "18"
        string_val: "19"
        string_val: "20"
        string_val: "21"
        string_val: "22"
        string_val: "23"
        string_val: "24"
        string_val: "25"
        string_val: "26"
        string_val: "27"
        string_val: "28"
        string_val: "29"
        string_val: "30"
        string_val: "31"
        string_val: "32"
        string_val: "33"
        string_val: "34"
        string_val: "35"
        string_val: "36"
        string_val: "37"
        string_val: "38"
        string_val: "39"
        string_val: "40"
        string_val: "41"
        string_val: "42"
        string_val: "43"
        string_val: "44"
        string_val: "45"
        string_val: "46"
        string_val: "47"
        string_val: "48"
        string_val: "49"
        string_val: "50"
        string_val: "51"
        string_val: "52"
        string_val: "53"
        string_val: "54"
        string_val: "55"
        string_val: "56"
        string_val: "57"
        string_val: "58"
        string_val: "60"
        string_val: "61"
        string_val: "62"
        string_val: "65"
        string_val: "66"
        string_val: "67"
        string_val: "68"
        string_val: "69"
        string_val: "71"
        string_val: "72"
        string_val: "85"
        string_val: "86"
        string_val: "87"
        string_val: "88"
        string_val: "89"
        string_val: "90"
        string_val: "91"
        string_val: "92"
        string_val: "93"
        string_val: "101"
        string_val: "102"
        string_val: "103"
        string_val: "105"
        string_val: "106"
        string_val: "107"
        string_val: "108"
        string_val: "109"
        string_val: "110"
        string_val: "111"
        string_val: "113"
        string_val: "115"
        string_val: "116"
        string_val: "117"
        string_val: "118"
        string_val: "119"
        string_val: "121"
        string_val: "123"
        string_val: "124"
        string_val: "127"
        string_val: "128"
        string_val: "129"
        string_val: "132"
        string_val: "133"
        string_val: "134"
        string_val: "136"
        string_val: "137"
        string_val: "138"
        string_val: "139"
        string_val: "142"
        string_val: "144"
        string_val: "145"
        string_val: "146"
        string_val: "147"
        string_val: "148"
        string_val: "149"
        string_val: "151"
        string_val: "154"
        string_val: "155"
        string_val: "157"
        string_val: "158"
        string_val: "159"
        string_val: "161"
        string_val: "163"
        string_val: "167"
        string_val: "168"
        string_val: "170"
        string_val: "175"
        string_val: "178"
        string_val: "179"
        string_val: "180"
        string_val: "182"
        string_val: "184"
        string_val: "186"
        string_val: "187"
        string_val: "188"
        string_val: "195"
        string_val: "201"
        string_val: "202"
        string_val: "203"
        string_val: "204"
        string_val: "205"
        string_val: "206"
        string_val: "207"
        string_val: "208"
        string_val: "210"
        string_val: "211"
        string_val: "212"
        string_val: "213"
        string_val: "215"
        string_val: "220"
        string_val: "221"
        string_val: "223"
        string_val: "224"
        string_val: "231"
        string_val: "232"
        string_val: "233"
        string_val: "235"
        string_val: "236"
        string_val: "237"
        string_val: "238"
        string_val: "239"
        string_val: "240"
        string_val: "241"
        string_val: "242"
        string_val: "243"
        string_val: "244"
        string_val: "245"
        string_val: "246"
        string_val: "247"
        string_val: "248"
        string_val: "249"
        string_val: "250"
        string_val: "252"
        string_val: "254"
        string_val: "255"
        string_val: "256"
        string_val: "257"
        string_val: "258"
        string_val: "261"
        string_val: "262"
        string_val: "263"
        string_val: "264"
        string_val: "265"
        string_val: "266"
        string_val: "267"
        string_val: "268"
        string_val: "273"
        string_val: "274"
        string_val: "275"
        string_val: "276"
        string_val: "277"
        string_val: "278"
        string_val: "280"
        string_val: "281"
        string_val: "282"
        string_val: "286"
        string_val: "287"
        string_val: "290"
        string_val: "291"
        string_val: "292"
        string_val: "293"
        string_val: "294"
        string_val: "295"
        string_val: "300"
        string_val: "301"
        string_val: "303"
        string_val: "304"
        string_val: "305"
        string_val: "306"
        string_val: "307"
        string_val: "308"
        string_val: "309"
        string_val: "311"
        string_val: "312"
        string_val: "313"
        string_val: "314"
        string_val: "315"
        string_val: "316"
        string_val: "318"
        string_val: "320"
        string_val: "321"
        string_val: "322"
        string_val: "326"
        string_val: "327"
        string_val: "328"
        string_val: "330"
        string_val: "331"
        string_val: "332"
        string_val: "333"
        string_val: "334"
        string_val: "335"
        string_val: "336"
        string_val: "338"
        string_val: "339"
        string_val: "340"
        string_val: "341"
        string_val: "343"
        string_val: "344"
        string_val: "345"
        string_val: "346"
        string_val: "347"
        string_val: "349"
        string_val: "350"
        string_val: "351"
        string_val: "352"
        string_val: "353"
        string_val: "354"
        string_val: "355"
        string_val: "356"
        string_val: "357"
        string_val: "359"
        string_val: "360"
        string_val: "361"
        string_val: "362"
        string_val: "363"
        string_val: "364"
        string_val: "366"
        string_val: "367"
        string_val: "368"
        string_val: "370"
        string_val: "373"
        string_val: "374"
        string_val: "375"
        string_val: "376"
        string_val: "378"
        string_val: "379"
        string_val: "380"
        string_val: "381"
        string_val: "387"
        string_val: "388"
        string_val: "389"
        string_val: "392"
        string_val: "393"
        string_val: "395"
        string_val: "398"
        string_val: "399"
        string_val: "407"
        string_val: "409"
        string_val: "410"
        string_val: "412"
        string_val: "413"
        string_val: "422"
        string_val: "434"
        string_val: "435"
        string_val: "437"
        string_val: "440"
        string_val: "441"
        string_val: "443"
        string_val: "445"
        string_val: "446"
        string_val: "452"
        string_val: "457"
        string_val: "460"
        string_val: "461"
        string_val: "474"
        string_val: "481"
        string_val: "482"
        string_val: "483"
        string_val: "484"
        string_val: "489"
        string_val: "492"
        string_val: "493"
        string_val: "601"
        string_val: "602"
        string_val: "603"
        string_val: "604"
        string_val: "605"
        string_val: "606"
        string_val: "607"
        string_val: "608"
        string_val: "609"
        string_val: "610"
        string_val: "611"
        string_val: "613"
        string_val: "614"
        string_val: "615"
        string_val: "616"
        string_val: "617"
        string_val: "618"
        string_val: "619"
        string_val: "620"
        string_val: "621"
        string_val: "622"
        string_val: "623"
        string_val: "624"
        string_val: "625"
        string_val: "626"
        string_val: "627"
        string_val: "628"
        string_val: "629"
        string_val: "630"
        string_val: "631"
        string_val: "632"
        string_val: "633"
        string_val: "634"
        string_val: "635"
        string_val: "636"
        string_val: "637"
        string_val: "638"
        string_val: "639"
        string_val: "640"
        string_val: "641"
        string_val: "642"
        string_val: "643"
        string_val: "644"
        string_val: "645"
        string_val: "646"
        string_val: "647"
        string_val: "648"
        string_val: "649"
        string_val: "650"
        string_val: "651"
        string_val: "652"
        string_val: "653"
        string_val: "654"
        string_val: "655"
        string_val: "656"
        string_val: "657"
        string_val: "658"
        string_val: "659"
        string_val: "660"
        string_val: "661"
        string_val: "662"
        string_val: "665"
        string_val: "666"
        string_val: "667"
        string_val: "668"
        string_val: "669"
        string_val: "670"
        string_val: "671"
        string_val: "672"
        string_val: "685"
        string_val: "686"
        string_val: "687"
        string_val: "688"
        string_val: "689"
        string_val: "690"
        string_val: "691"
        string_val: "692"
        string_val: "726"
        string_val: "736"
        string_val: "737"
        string_val: "746"
        string_val: "773"
        string_val: "774"
        string_val: "775"
        string_val: "776"
        string_val: "778"
        string_val: "779"
        string_val: "780"
        string_val: "788"
        string_val: "789"
        string_val: "795"
        string_val: "806"
        string_val: "807"
        string_val: "808"
        string_val: "809"
        string_val: "810"
        string_val: "811"
        string_val: "812"
        string_val: "813"
        string_val: "814"
        string_val: "816"
        string_val: "873"
        string_val: "881"
        string_val: "906"
        string_val: "907"
        string_val: "908"
        string_val: "909"
        string_val: "910"
        string_val: "911"
        string_val: "912"
        string_val: "913"
        string_val: "915"
        string_val: "916"
        string_val: "1001"
        string_val: "1002"
        string_val: "1003"
        string_val: "1004"
        string_val: "1005"
        string_val: "1006"
        string_val: "1007"
        string_val: "1008"
        string_val: "1009"
        string_val: "1012"
        string_val: "1013"
        string_val: "1014"
        string_val: "1015"
        string_val: "1016"
        string_val: "1018"
        string_val: "1019"
        string_val: "1021"
        string_val: "1022"
        string_val: "1024"
        string_val: "1025"
        string_val: "1026"
        string_val: "1027"
        string_val: "1028"
        string_val: "1029"
        string_val: "1031"
        string_val: "1033"
        string_val: "1034"
        string_val: "1035"
        string_val: "1036"
        string_val: "1037"
        string_val: "1038"
        string_val: "1040"
        string_val: "1041"
        string_val: "1042"
        string_val: "1043"
        string_val: "1045"
        string_val: "1046"
        string_val: "1047"
        string_val: "1048"
        string_val: "1049"
        string_val: "1050"
        string_val: "1055"
        string_val: "1057"
        string_val: "1058"
        string_val: "1059"
        string_val: "1061"
        string_val: "1062"
        string_val: "1064"
        string_val: "1066"
        string_val: "1067"
        string_val: "1071"
        string_val: "1072"
        string_val: "1073"
        string_val: "1075"
        string_val: "1076"
        string_val: "1077"
        string_val: "1078"
        string_val: "1079"
        string_val: "1081"
        string_val: "1083"
        string_val: "1084"
        string_val: "1085"
        string_val: "1087"
        string_val: "1088"
        string_val: "1089"
        string_val: "1090"
        string_val: "1092"
        string_val: "1093"
        string_val: "1096"
        string_val: "1098"
        string_val: "1099"
        string_val: "1101"
        string_val: "1104"
        string_val: "1105"
        string_val: "1106"
        string_val: "1107"
        string_val: "1108"
        string_val: "1109"
        string_val: "1110"
        string_val: "1111"
        string_val: "1112"
        string_val: "1113"
        string_val: "1114"
        string_val: "1117"
        string_val: "1118"
        string_val: "1119"
        string_val: "1120"
        string_val: "1121"
        string_val: "1122"
        string_val: "1124"
        string_val: "1126"
        string_val: "1128"
        string_val: "1129"
        string_val: "1131"
        string_val: "1132"
        string_val: "1133"
        string_val: "1134"
        string_val: "1135"
        string_val: "1136"
        string_val: "1137"
        string_val: "1138"
        string_val: "1139"
        string_val: "1140"
        string_val: "1141"
        string_val: "1142"
        string_val: "1143"
        string_val: "1145"
        string_val: "1146"
        string_val: "1147"
        string_val: "1148"
        string_val: "1156"
        string_val: "1157"
        string_val: "1158"
        string_val: "1159"
        string_val: "1160"
        string_val: "1162"
        string_val: "1163"
        string_val: "1166"
        string_val: "1169"
        string_val: "1170"
        string_val: "1172"
        string_val: "1173"
        string_val: "1174"
        string_val: "1175"
        string_val: "1176"
        string_val: "1177"
        string_val: "1178"
        string_val: "1179"
        string_val: "1180"
        string_val: "1181"
        string_val: "1182"
        string_val: "1183"
        string_val: "1184"
        string_val: "1185"
        string_val: "1186"
        string_val: "1189"
        string_val: "1190"
        string_val: "1191"
        string_val: "1192"
        string_val: "1193"
        string_val: "1195"
        string_val: "1197"
        string_val: "1198"
        string_val: "1199"
        string_val: "1200"
        string_val: "1201"
        string_val: "1202"
        string_val: "1203"
        string_val: "1204"
        string_val: "1205"
        string_val: "1206"
        string_val: "1207"
        string_val: "1208"
        string_val: "1210"
        string_val: "1211"
        string_val: "1212"
        string_val: "1213"
        string_val: "1214"
        string_val: "1215"
        string_val: "1217"
        string_val: "1218"
        string_val: "1219"
        string_val: "1220"
        string_val: "1222"
        string_val: "1223"
        string_val: "1224"
        string_val: "1225"
        string_val: "1227"
        string_val: "1230"
        string_val: "1231"
        string_val: "1232"
        string_val: "1233"
        string_val: "1234"
        string_val: "1235"
        string_val: "1236"
        string_val: "1237"
        string_val: "1238"
        string_val: "1239"
        string_val: "1240"
        string_val: "1241"
        string_val: "1242"
        string_val: "1243"
        string_val: "1245"
        string_val: "1246"
        string_val: "1247"
        string_val: "1248"
        string_val: "1249"
        string_val: "1254"
        string_val: "1255"
        string_val: "1256"
        string_val: "1257"
        string_val: "1258"
        string_val: "1259"
        string_val: "1260"
        string_val: "1261"
        string_val: "1262"
        string_val: "1263"
        string_val: "1264"
        string_val: "1265"
        string_val: "1266"
        string_val: "1267"
        string_val: "1268"
        string_val: "1269"
        string_val: "1270"
        string_val: "1272"
        string_val: "1273"
        string_val: "1274"
        string_val: "1275"
        string_val: "1276"
        string_val: "1277"
        string_val: "1278"
        string_val: "1279"
        string_val: "1280"
        string_val: "1281"
        string_val: "1284"
        string_val: "1285"
        string_val: "1286"
        string_val: "1287"
        string_val: "1288"
        string_val: "1289"
        string_val: "1290"
        string_val: "1291"
        string_val: "1292"
        string_val: "1294"
        string_val: "1295"
        string_val: "1296"
        string_val: "1298"
        string_val: "1299"
        string_val: "1301"
        string_val: "1302"
        string_val: "1303"
        string_val: "1304"
        string_val: "1305"
        string_val: "1306"
        string_val: "1307"
        string_val: "1308"
        string_val: "1309"
        string_val: "1310"
        string_val: "1311"
        string_val: "1312"
        string_val: "1313"
        string_val: "1314"
        string_val: "1315"
        string_val: "1316"
        string_val: "1317"
        string_val: "1318"
        string_val: "1319"
        string_val: "1320"
        string_val: "1321"
        string_val: "1322"
        string_val: "1323"
        string_val: "1324"
        string_val: "1325"
        string_val: "1327"
        string_val: "1328"
        string_val: "1329"
        string_val: "1330"
        string_val: "1331"
        string_val: "1332"
        string_val: "1333"
        string_val: "1334"
        string_val: "1337"
        string_val: "1340"
        string_val: "1341"
        string_val: "1345"
        string_val: "1346"
        string_val: "1347"
        string_val: "1348"
        string_val: "1349"
        string_val: "1350"
        string_val: "1351"
        string_val: "1352"
        string_val: "1353"
        string_val: "1354"
        string_val: "1355"
        string_val: "1356"
        string_val: "1357"
        string_val: "1358"
        string_val: "1359"
        string_val: "1360"
        string_val: "1362"
        string_val: "1363"
        string_val: "1364"
        string_val: "1366"
        string_val: "1367"
        string_val: "1368"
        string_val: "1369"
        string_val: "1370"
        string_val: "1371"
        string_val: "1372"
        string_val: "1373"
        string_val: "1374"
        string_val: "1375"
        string_val: "1376"
        string_val: "1378"
        string_val: "1379"
        string_val: "1380"
        string_val: "1381"
        string_val: "1383"
        string_val: "1384"
        string_val: "1385"
        string_val: "1388"
        string_val: "1390"
        string_val: "1393"
        string_val: "1394"
        string_val: "1396"
        string_val: "1397"
        string_val: "1398"
        string_val: "1399"
        string_val: "1400"
        string_val: "1404"
        string_val: "1405"
        string_val: "1406"
        string_val: "1407"
        string_val: "1408"
        string_val: "1411"
        string_val: "1412"
        string_val: "1413"
        string_val: "1417"
        string_val: "1418"
        string_val: "1419"
        string_val: "1422"
        string_val: "1423"
        string_val: "1426"
        string_val: "1427"
        string_val: "1428"
        string_val: "1429"
        string_val: "1430"
        string_val: "1431"
        string_val: "1432"
        string_val: "1433"
        string_val: "1436"
        string_val: "1437"
        string_val: "1438"
        string_val: "1439"
        string_val: "1441"
        string_val: "1444"
        string_val: "1445"
        string_val: "1447"
        string_val: "1448"
        string_val: "1453"
        string_val: "1454"
        string_val: "1455"
        string_val: "1457"
        string_val: "1458"
        string_val: "1466"
        string_val: "1470"
        string_val: "1471"
        string_val: "1473"
        string_val: "1475"
        string_val: "1476"
        string_val: "1479"
        string_val: "1481"
        string_val: "1486"
        string_val: "1488"
        string_val: "1490"
        string_val: "1495"
        string_val: "1503"
        string_val: "1504"
        string_val: "1509"
        string_val: "1510"
        string_val: "1511"
        string_val: "1512"
        string_val: "1514"
        string_val: "1525"
        string_val: "1528"
        string_val: "1529"
        string_val: "1541"
        string_val: "1543"
        string_val: "1550"
        string_val: "1605"
        string_val: "1633"
        string_val: "1636"
        string_val: "1640"
        string_val: "1670"
        string_val: "1684"
        string_val: "1694"
        string_val: "2117"
        string_val: "2202"
        string_val: "2204"
        string_val: "2215"
        string_val: "2237"
        string_val: "2302"
        string_val: "2346"
        string_val: "2402"
        string_val: "2412"
        string_val: "2427"
        string_val: "2501"
        string_val: "2506"
        string_val: "2507"
        string_val: "2515"
        string_val: "2517"
        string_val: "2703"
        string_val: "2704"
        string_val: "2805"
        string_val: "2807"
        string_val: "2912"
        string_val: "2915"
        string_val: "3105"
        string_val: "3559"
        string_val: "3601"
        string_val: "3602"
        string_val: "3604"
        string_val: "3610"
        string_val: "3611"
        string_val: "3617"
        string_val: "3619"
        string_val: "3621"
        string_val: "3721"
        string_val: "3726"
        string_val: "3803"
        string_val: "3909"
        string_val: "3921"
        string_val: "3927"
        string_val: "4006"
        string_val: "4104"
        string_val: "4109"
        string_val: "4116"
        string_val: "4118"
        string_val: "4120"
        string_val: "4121"
        string_val: "4123"
        string_val: "4206"
        string_val: "4207"
        string_val: "4306"
        string_val: "4326"
        string_val: "4815"
        string_val: "4910"
        string_val: "5404"
        string_val: "5407"
        string_val: "5514"
        string_val: "5614"
        string_val: "5621"
        string_val: "5630"
        string_val: "5637"
        string_val: "5640"
        string_val: "5645"
        string_val: "5672"
        string_val: "5677"
        string_val: "5702"
        string_val: "5723"
        string_val: "5733"
        string_val: "5736"
        string_val: "5740"
        string_val: "5831"
        string_val: "5899"
        string_val: "6105"
        string_val: "6109"
        string_val: "6223"
        string_val: "6251"
        string_val: "6252"
        string_val: "6260"
        string_val: "6276"
        string_val: "6301"
        string_val: "6303"
        string_val: "6304"
        string_val: "6643"
        string_val: "6727"
        string_val: "6805"
        string_val: "6807"
        string_val: "6831"
        string_val: "6838"
        string_val: "6840"
        string_val: "6845"
        string_val: "6848"
        string_val: "6904"
        string_val: "6924"
        string_val: "7206"
        string_val: "7207"
        string_val: "7208"
        string_val: "7233"
        string_val: "7460"
        string_val: "7495"
        string_val: "7709"
        string_val: "7912"
        string_val: "7919"
        string_val: "7949"
        string_val: "7951"
        string_val: "8115"
        string_val: "8208"
        string_val: "8209"
        string_val: "8615"
        string_val: "8616"
        string_val: "8710"
        string_val: "8801"
        string_val: "9006"
        string_val: "9013"
        string_val: "9017"
        string_val: "9042"
        string_val: "19513"
        string_val: "32010"
        string_val: "32120"
        string_val: "39617"
        string_val: "46404"
        string_val: "46407"
        string_val: "49047"
        string_val: "53370"
        string_val: "53844"
        string_val: "90750"
        string_val: "90752"
        string_val: "90753"
        string_val: "91017"
        string_val: "91018"
        string_val: "91019"
        string_val: "91028"
        string_val: "91382"
        string_val: "92297"
        string_val: "92311"
        string_val: "92319"
        string_val: "92407"
        string_val: "92412"
        string_val: "92414"
        string_val: "92507"
        string_val: "92508"
        string_val: "92521"
        string_val: "93301"
        string_val: "93303"
        string_val: "93308"
        string_val: "93309"
        string_val: "93641"
        string_val: "93703"
        string_val: "95710"
        string_val: "95711"
        string_val: "95771"
        string_val: "96005"
        string_val: "96100"
        string_val: "96408"
        string_val: "96410"
        string_val: "96898"
        string_val: "97347"
        string_val: "97725"
        string_val: "98704"
        string_val: "98805"
        string_val: "98809"
        string_val: "98811"
        string_val: "99068"
        string_val: "99403"
        string_val: "99578"
        string_val: "99618"
        string_val: "99621"
        string_val: "99639"
        string_val: "99674"
        string_val: "99675"
        string_val: "99702"
        string_val: "99902"
        string_val: "59"
        string_val: "63"
        string_val: "64"
        string_val: "70"
        string_val: "73"
        string_val: "74"
        string_val: "75"
        string_val: "76"
        string_val: "77"
        string_val: "78"
        string_val: "79"
        string_val: "80"
        string_val: "81"
        string_val: "82"
        string_val: "83"
        string_val: "84"
        string_val: "94"
        string_val: "95"
        string_val: "96"
        string_val: "97"
        string_val: "98"
        string_val: "99"
        string_val: "100"
        string_val: "104"
        string_val: "112"
        string_val: "114"
        string_val: "120"
        string_val: "122"
        string_val: "125"
        string_val: "126"
        string_val: "130"
        string_val: "131"
        string_val: "135"
        string_val: "140"
        string_val: "141"
        string_val: "143"
        string_val: "150"
        string_val: "152"
        string_val: "153"
        string_val: "156"
        string_val: "160"
        string_val: "162"
        string_val: "164"
        string_val: "165"
        string_val: "166"
        string_val: "169"
        string_val: "171"
        string_val: "172"
        string_val: "173"
        string_val: "174"
        string_val: "176"
        string_val: "177"
        string_val: "183"
        string_val: "189"
        string_val: "194"
        string_val: "196"
        string_val: "197"
        string_val: "198"
        string_val: "200"
        string_val: "209"
        string_val: "222"
        string_val: "226"
        string_val: "251"
        string_val: "260"
        string_val: "269"
        string_val: "270"
        string_val: "279"
        string_val: "283"
        string_val: "288"
        string_val: "297"
        string_val: "299"
        string_val: "325"
        string_val: "329"
        string_val: "337"
        string_val: "369"
        string_val: "371"
        string_val: "372"
        string_val: "383"
        string_val: "384"
        string_val: "394"
        string_val: "397"
        string_val: "400"
        string_val: "402"
        string_val: "414"
        string_val: "415"
        string_val: "417"
        string_val: "418"
        string_val: "420"
        string_val: "432"
        string_val: "439"
        string_val: "450"
        string_val: "453"
        string_val: "454"
        string_val: "455"
        string_val: "456"
        string_val: "459"
        string_val: "465"
        string_val: "467"
        string_val: "470"
        string_val: "473"
        string_val: "485"
        string_val: "486"
        string_val: "487"
        string_val: "488"
        string_val: "494"
        string_val: "500"
        string_val: "502"
        string_val: "503"
        string_val: "504"
        string_val: "514"
        string_val: "516"
        string_val: "520"
        string_val: "524"
        string_val: "526"
        string_val: "529"
        string_val: "534"
        string_val: "535"
        string_val: "536"
        string_val: "538"
        string_val: "544"
        string_val: "553"
        string_val: "555"
        string_val: "556"
        string_val: "557"
        string_val: "558"
        string_val: "559"
        string_val: "561"
        string_val: "564"
        string_val: "574"
        string_val: "576"
        string_val: "581"
        string_val: "584"
        string_val: "586"
        string_val: "588"
        string_val: "594"
        string_val: "600"
        string_val: "612"
        string_val: "676"
        string_val: "679"
        string_val: "683"
        string_val: "694"
        string_val: "695"
        string_val: "697"
        string_val: "698"
        string_val: "703"
        string_val: "705"
        string_val: "708"
        string_val: "717"
        string_val: "990"
        string_val: "1534"
        string_val: "1544"
        string_val: "1547"
        string_val: "1569"
        string_val: "1572"
        string_val: "1574"
        string_val: "1575"
        string_val: "18002"
        string_val: "18004"
        string_val: "18008"
        string_val: "21532"
        string_val: "24003"
        string_val: "24013"
        string_val: "24014"
        string_val: "24019"
        string_val: "24020"
        string_val: "24022"
        string_val: "24024"
        string_val: "24034"
        string_val: "24039"
        string_val: "24043"
        string_val: "24044"
        string_val: "24052"
        string_val: "24055"
        string_val: "24056"
        string_val: "24057"
        string_val: "24058"
        string_val: "24061"
        string_val: "24068"
        string_val: "24069"
        string_val: "24070"
        string_val: "24071"
        string_val: "24075"
        string_val: "24077"
        string_val: "24078"
        string_val: "24083"
        string_val: "24088"
        string_val: "24089"
        string_val: "24091"
        string_val: "24097"
        string_val: "24099"
        string_val: "24100"
        string_val: "24105"
        string_val: "24106"
        string_val: "24111"
        string_val: "24112"
        string_val: "24113"
        string_val: "24114"
        string_val: "24115"
        string_val: "24120"
        string_val: "24121"
        string_val: "24122"
        string_val: "24125"
        string_val: "24129"
        string_val: "24131"
        string_val: "24132"
        string_val: "24133"
        string_val: "24134"
        string_val: "24137"
        string_val: "24143"
        string_val: "24146"
        string_val: "24147"
        string_val: "24148"
        string_val: "24152"
        string_val: "24153"
        string_val: "24160"
        string_val: "24164"
        string_val: "24165"
        string_val: "24166"
        string_val: "24176"
        string_val: "24177"
        string_val: "24180"
        string_val: "24183"
        string_val: "24190"
        string_val: "24194"
        string_val: "24197"
        string_val: "24208"
        string_val: "24209"
        string_val: "24213"
        string_val: "24215"
        string_val: "24219"
        string_val: "24228"
        string_val: "24242"
        string_val: "24243"
        string_val: "24244"
        string_val: "24258"
        string_val: "24268"
        string_val: "24269"
        string_val: "24272"
        string_val: "24280"
        string_val: "24281"
        string_val: "24282"
        string_val: "24300"
        string_val: "25004"
        string_val: "25005"
        string_val: "25007"
        string_val: "25009"
        string_val: "25014"
        string_val: "25018"
        string_val: "25025"
        string_val: "25028"
        string_val: "25029"
        string_val: "25030"
        string_val: "25037"
        string_val: "25040"
        string_val: "25041"
        string_val: "25042"
        string_val: "25044"
        string_val: "25046"
        string_val: "25048"
        string_val: "25050"
        string_val: "25053"
        string_val: "25056"
        string_val: "25065"
        string_val: "25068"
        string_val: "25073"
        string_val: "25074"
        string_val: "25076"
        string_val: "25078"
        string_val: "25079"
        string_val: "25085"
        string_val: "25091"
        string_val: "25092"
        string_val: "25094"
        string_val: "25099"
        string_val: "25100"
        string_val: "25107"
        string_val: "25109"
        string_val: "25115"
        string_val: "25120"
        string_val: "25121"
        string_val: "25123"
        string_val: "25124"
        string_val: "25125"
        string_val: "25127"
        string_val: "25130"
        string_val: "25131"
        string_val: "25133"
        string_val: "25134"
        string_val: "25135"
        string_val: "25136"
        string_val: "25141"
        string_val: "25143"
        string_val: "25144"
        string_val: "25145"
        string_val: "25149"
        string_val: "25153"
        string_val: "25155"
        string_val: "25156"
        string_val: "25161"
        string_val: "25162"
        string_val: "25164"
        string_val: "25166"
        string_val: "25169"
        string_val: "25170"
        string_val: "25171"
        string_val: "25172"
        string_val: "25173"
        string_val: "25175"
        string_val: "25177"
        string_val: "25178"
        string_val: "25181"
        string_val: "25186"
        string_val: "25187"
        string_val: "25189"
        string_val: "25192"
        string_val: "25193"
        string_val: "25196"
        string_val: "25197"
        string_val: "25198"
        string_val: "25199"
        string_val: "25205"
        string_val: "25211"
        string_val: "25216"
        string_val: "25222"
        string_val: "25227"
        string_val: "25228"
        string_val: "25230"
        string_val: "25232"
        string_val: "25233"
        string_val: "25476"
        string_val: "26005"
        string_val: "26007"
        string_val: "26009"
        string_val: "26010"
        string_val: "26012"
        string_val: "26013"
        string_val: "26016"
        string_val: "26017"
        string_val: "26018"
        string_val: "26022"
        string_val: "26025"
        string_val: "26026"
        string_val: "26027"
        string_val: "26032"
        string_val: "26034"
        string_val: "26036"
        string_val: "26040"
        string_val: "26043"
        string_val: "26046"
        string_val: "26048"
        string_val: "26050"
        string_val: "26052"
        string_val: "26055"
        string_val: "26056"
        string_val: "26060"
        string_val: "26068"
        string_val: "26070"
        string_val: "26071"
        string_val: "26072"
        string_val: "26076"
        string_val: "26080"
        string_val: "26085"
        string_val: "26093"
        string_val: "26098"
        string_val: "26099"
        string_val: "26100"
        string_val: "26101"
        string_val: "26104"
        string_val: "26105"
        string_val: "26107"
        string_val: "26110"
        string_val: "26111"
        string_val: "26112"
        string_val: "26113"
        string_val: "26114"
        string_val: "26115"
        string_val: "26116"
        string_val: "26117"
        string_val: "26118"
        string_val: "26120"
        string_val: "26124"
        string_val: "26128"
        string_val: "26130"
        string_val: "26135"
        string_val: "26137"
        string_val: "26138"
        string_val: "26139"
        string_val: "26141"
        string_val: "26142"
        string_val: "26143"
        string_val: "26144"
        string_val: "26149"
        string_val: "26153"
        string_val: "26154"
        string_val: "26156"
        string_val: "26159"
        string_val: "26169"
        string_val: "26171"
        string_val: "26172"
        string_val: "26184"
        string_val: "26186"
        string_val: "26199"
        string_val: "26200"
        string_val: "26202"
        string_val: "26203"
        string_val: "26204"
        string_val: "26205"
        string_val: "26210"
        string_val: "26212"
        string_val: "26214"
        string_val: "26233"
        string_val: "26237"
        string_val: "26239"
        string_val: "26242"
        string_val: "26243"
        string_val: "26246"
        string_val: "26250"
        string_val: "26253"
        string_val: "26265"
        string_val: "26268"
        string_val: "26270"
        string_val: "26271"
        string_val: "26276"
        string_val: "26278"
        string_val: "26288"
        string_val: "27003"
        string_val: "27004"
        string_val: "27005"
        string_val: "27007"
        string_val: "27011"
        string_val: "27012"
        string_val: "27015"
        string_val: "27016"
        string_val: "27019"
        string_val: "27021"
        string_val: "27022"
        string_val: "27023"
        string_val: "27027"
        string_val: "27032"
        string_val: "27034"
        string_val: "27036"
        string_val: "27037"
        string_val: "27038"
        string_val: "27039"
        string_val: "27046"
        string_val: "27048"
        string_val: "27052"
        string_val: "27053"
        string_val: "27054"
        string_val: "27056"
        string_val: "27057"
        string_val: "27064"
        string_val: "27069"
        string_val: "27073"
        string_val: "27074"
        string_val: "27075"
        string_val: "27081"
        string_val: "27084"
        string_val: "27085"
        string_val: "27088"
        string_val: "27089"
        string_val: "27091"
        string_val: "27092"
        string_val: "27093"
        string_val: "27098"
        string_val: "27105"
        string_val: "27108"
        string_val: "27109"
        string_val: "27110"
        string_val: "27111"
        string_val: "27112"
        string_val: "27116"
        string_val: "27118"
        string_val: "27122"
        string_val: "27124"
        string_val: "27128"
        string_val: "27130"
        string_val: "27133"
        string_val: "27147"
        string_val: "27159"
        string_val: "27164"
        string_val: "27169"
        string_val: "27176"
        string_val: "27177"
        string_val: "27193"
        string_val: "27195"
        string_val: "27198"
        string_val: "27200"
        string_val: "27214"
        string_val: "27217"
        string_val: "27228"
        string_val: "27238"
        string_val: "27244"
        string_val: "27251"
        string_val: "27261"
        string_val: "27270"
        string_val: "27286"
        string_val: "27302"
        string_val: "27305"
        string_val: "27306"
        string_val: "27315"
        string_val: "27321"
        string_val: "27356"
        string_val: "27359"
        string_val: "27361"
        string_val: "27362"
        string_val: "27371"
        string_val: "27372"
        string_val: "27374"
        string_val: "27375"
        string_val: "27377"
        string_val: "27378"
        string_val: "27379"
        string_val: "27381"
        string_val: "27382"
        string_val: "27386"
        string_val: "27394"
        string_val: "27398"
        string_val: "27407"
        string_val: "27422"
        string_val: "27423"
        string_val: "27432"
        string_val: "27434"
        string_val: "27439"
        string_val: "27440"
        string_val: "28001"
        string_val: "28003"
        string_val: "28006"
        string_val: "28012"
        string_val: "28016"
        string_val: "28017"
        string_val: "28018"
        string_val: "28019"
        string_val: "28022"
        string_val: "28023"
        string_val: "28024"
        string_val: "28025"
        string_val: "28028"
        string_val: "28029"
        string_val: "28033"
        string_val: "28035"
        string_val: "28038"
        string_val: "28044"
        string_val: "28045"
        string_val: "28053"
        string_val: "28055"
        string_val: "28058"
        string_val: "28062"
        string_val: "28065"
        string_val: "28066"
        string_val: "28067"
        string_val: "28069"
        string_val: "28072"
        string_val: "28073"
        string_val: "28077"
        string_val: "28080"
        string_val: "28083"
        string_val: "28085"
        string_val: "28090"
        string_val: "28093"
        string_val: "28098"
        string_val: "28100"
        string_val: "28109"
        string_val: "28120"
        string_val: "28121"
        string_val: "28127"
        string_val: "28131"
        string_val: "28135"
        string_val: "28136"
        string_val: "28138"
        string_val: "28140"
        string_val: "28149"
        string_val: "28151"
        string_val: "28156"
        string_val: "28158"
        string_val: "28170"
        string_val: "28175"
        string_val: "28176"
        string_val: "28179"
        string_val: "28180"
        string_val: "28182"
        string_val: "28185"
        string_val: "28190"
        string_val: "28217"
        string_val: "28223"
        string_val: "28224"
        string_val: "28229"
        string_val: "28231"
        string_val: "28233"
        string_val: "28234"
        string_val: "28241"
        string_val: "28243"
        string_val: "28245"
        string_val: "28246"
        string_val: "28249"
        string_val: "28250"
        string_val: "28269"
        string_val: "28292"
        string_val: "28293"
        string_val: "28303"
        string_val: "28306"
        string_val: "28307"
        string_val: "28311"
        string_val: "28313"
        string_val: "28318"
        string_val: "28325"
        string_val: "28326"
        string_val: "28346"
        string_val: "28349"
        string_val: "28363"
        string_val: "28365"
        string_val: "28386"
        string_val: "28389"
        string_val: "28410"
        string_val: "28413"
        string_val: "28414"
        string_val: "28422"
        string_val: "28501"
        string_val: "28589"
        string_val: "64008"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1579
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1579
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1579
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1579
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1579
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1579
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000+\006\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1579
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1579
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:10"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5
          }
        }
        string_val: "E"
        string_val: "R"
        string_val: "N"
        string_val: "G"
        string_val: "Z"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:11"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "SU"
        string_val: "MO"
        string_val: "SL"
        string_val: "SN"
        string_val: "SP"
        string_val: "OS"
        string_val: "PN"
        string_val: "PP"
        string_val: "BL"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:3"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/ToFloat"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/Shape"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/UraPN/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/ToFloat"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:4"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/Const"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table/ToInt64"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:9"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 8
          }
        }
        string_val: "J"
        string_val: "O"
        string_val: "S"
        string_val: "M"
        string_val: "D"
        string_val: "N"
        string_val: "V"
        string_val: "T"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:5"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "L"
        string_val: "0"
        string_val: "H"
        string_val: "2"
        string_val: "3"
        string_val: "4"
        string_val: "1"
        string_val: "5"
        string_val: "T"
        string_val: "V"
        string_val: "N"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\013\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:12"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1/stack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/unstack"
  op: "Unpack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/stack"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Mul"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Gather"
  op: "Gather"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Add"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5
          }
        }
        string_val: "AH"
        string_val: "AZ"
        string_val: "MA"
        string_val: "OS"
        string_val: "AN"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/ToInt64"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Gather"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Where"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/to_sparse_input/Cast"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/hash_table_Lookup"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/Dan/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Mesec/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/UraPN/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VNaselju_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/concat/axis"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3951
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "o\017\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.038485266268253326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.038485266268253326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 542
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3951
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_0/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_0/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Mean"
  op: "Mean"
  input: "dnn/zero_fraction/Cast"
  input: "dnn/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_0/activation/tag"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 570
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_1/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_1/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_1/Cast"
  input: "dnn/zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_1/activation/tag"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 598
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "dnn/hiddenlayer_2/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "dnn/hiddenlayer_2/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel"
  op: "Identity"
  input: "dnn/hiddenlayer_2/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias"
  op: "Identity"
  input: "dnn/hiddenlayer_2/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_2/MatMul"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_2/Cast"
  input: "dnn/zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_2/activation/tag"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.23904572427272797
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.23904572427272797
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1
    }
  }
  attr {
    key: "seed2"
    value {
      i: 626
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/kernel/part_0"
  input: "dnn/logits/kernel/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/kernel/part_0/read"
  op: "Identity"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/bias/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/bias/part_0"
  input: "dnn/logits/bias/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/bias/part_0/read"
  op: "Identity"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel"
  op: "Identity"
  input: "dnn/logits/kernel/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/bias"
  op: "Identity"
  input: "dnn/logits/bias/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_3/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_3/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Mean"
  op: "Mean"
  input: "dnn/zero_fraction_3/Cast"
  input: "dnn/zero_fraction_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/dnn/logits/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/logits/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits/activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/activation"
  op: "HistogramSummary"
  input: "dnn/dnn/logits/activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/logits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_rank/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_rank/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "dnn/head/logits/strided_slice/stack"
  op: "Const"
  input: "^dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/logits/strided_slice/stack_1"
  op: "Const"
  input: "^dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/logits/strided_slice/stack_2"
  op: "Const"
  input: "^dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/logits/strided_slice"
  op: "StridedSlice"
  input: "dnn/head/logits/Shape"
  input: "dnn/head/logits/strided_slice/stack"
  input: "dnn/head/logits/strided_slice/stack_1"
  input: "dnn/head/logits/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/head/logits/assert_equal/x"
  op: "Const"
  input: "^dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_equal/Equal"
  op: "Equal"
  input: "dnn/head/logits/assert_equal/x"
  input: "dnn/head/logits/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_equal/Const"
  op: "Const"
  input: "^dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/logits/assert_equal/All"
  op: "All"
  input: "dnn/head/logits/assert_equal/Equal"
  input: "dnn/head/logits/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/logits/assert_equal/Assert/Assert"
  op: "Assert"
  input: "dnn/head/logits/assert_equal/All"
  input: "dnn/head/logits/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/logits"
  op: "Identity"
  input: "dnn/logits/BiasAdd"
  input: "^dnn/head/logits/assert_rank/static_checks_determined_all_ok"
  input: "^dnn/head/logits/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_ids"
  op: "ArgMax"
  input: "dnn/head/logits"
  input: "dnn/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "dnn/head/predictions/class_ids"
  input: "dnn/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5
          }
        }
        string_val: "B"
        string_val: "H"
        string_val: "L"
        string_val: "S"
        string_val: "U"
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/range"
  op: "Range"
  input: "dnn/head/predictions/class_string_lookup/range/start"
  input: "dnn/head/predictions/class_string_lookup/Size"
  input: "dnn/head/predictions/class_string_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/ToInt64"
  op: "Cast"
  input: "dnn/head/predictions/class_string_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup/table_init"
  op: "InitializeTableV2"
  input: "dnn/head/predictions/class_string_lookup"
  input: "dnn/head/predictions/class_string_lookup/ToInt64"
  input: "dnn/head/predictions/class_string_lookup/Const"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "dnn/head/predictions/class_string_lookup_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/head/predictions/class_string_lookup"
  input: "dnn/head/predictions/ExpandDims"
  input: "dnn/head/predictions/class_string_lookup/Const_1"
  attr {
    key: "Tin"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/predictions/probabilities"
  op: "Softmax"
  input: "dnn/head/logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/maybe_expand_dim/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/maybe_expand_dim/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueMany:13"
  input: "dnn/head/maybe_expand_dim/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_rank/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "dnn/head/labels/Shape"
  input: "dnn/head/labels/strided_slice/stack"
  input: "dnn/head/labels/strided_slice/stack_1"
  input: "dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/x"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "dnn/head/labels/assert_equal/x"
  input: "dnn/head/labels/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/All"
  op: "All"
  input: "dnn/head/labels/assert_equal/Equal"
  input: "dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [batch_size, 1]"
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (dnn/head/labels/assert_equal/x:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Const_3"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (dnn/head/labels/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [batch_size, 1]"
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_1"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (dnn/head/labels/assert_equal/x:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert/data_4"
  op: "Const"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (dnn/head/labels/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "dnn/head/labels/assert_equal/All"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_1"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "dnn/head/labels/assert_equal/x"
  input: "dnn/head/labels/assert_equal/Assert/Assert/data_4"
  input: "dnn/head/labels/strided_slice"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/labels"
  op: "Identity"
  input: "dnn/head/maybe_expand_dim/ExpandDims"
  input: "^dnn/head/labels/assert_rank/static_checks_determined_all_ok"
  input: "^dnn/head/labels/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5
          }
        }
        string_val: "B"
        string_val: "H"
        string_val: "L"
        string_val: "S"
        string_val: "U"
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/range"
  op: "Range"
  input: "dnn/head/class_id_lookup/range/start"
  input: "dnn/head/class_id_lookup/Size"
  input: "dnn/head/class_id_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/ToInt64"
  op: "Cast"
  input: "dnn/head/class_id_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/head/class_id_lookup/hash_table/table_init"
  op: "InitializeTableV2"
  input: "dnn/head/class_id_lookup/hash_table"
  input: "dnn/head/class_id_lookup/Const"
  input: "dnn/head/class_id_lookup/ToInt64"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/head/hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "dnn/head/class_id_lookup/hash_table"
  input: "dnn/head/labels"
  input: "dnn/head/class_id_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 5
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Less"
  op: "Less"
  input: "dnn/head/hash_table_Lookup"
  input: "dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/All"
  op: "All"
  input: "dnn/head/assert_range/assert_less/Less"
  input: "dnn/head/assert_range/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must < n_classes"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (dnn/head/hash_table_Lookup:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "dnn/head/assert_range/assert_less/All"
  input: "dnn/head/assert_range/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "dnn/head/assert_range/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_t"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must < n_classes"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (dnn/head/hash_table_Lookup:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/data_3"
  op: "Const"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "dnn/head/assert_range/assert_less/All"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/assert_less/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "dnn/head/hash_table_Lookup"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/hash_table_Lookup"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "dnn/head/assert_range/Const"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/data_3"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_f"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "dnn/head/assert_range/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "dnn/head/assert_range/assert_non_negative/Const"
  input: "dnn/head/hash_table_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must >= 0"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (dnn/head/hash_table_Lookup:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must >= 0"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (dnn/head/hash_table_Lookup:0) = "
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "dnn/head/hash_table_Lookup"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/hash_table_Lookup"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/head/assert_range/Identity"
  op: "Identity"
  input: "dnn/head/hash_table_Lookup"
  input: "^dnn/head/assert_range/assert_less/Assert/AssertGuard/Merge"
  input: "^dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "dnn/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "dnn/head/logits"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/head/ExpandDims"
  op: "ExpandDims"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "dnn/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "dnn/head/weighted_loss/ToFloat_1/x"
  op: "Const"
  input: "^dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "dnn/head/ExpandDims"
  input: "dnn/head/weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "dnn/head/weighted_loss/Mul"
  input: "dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "dnn/head/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "weighted_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "weighted_loss/ToFloat_1/x"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "weighted_loss/Mul"
  op: "Mul"
  input: "dnn/head/ExpandDims"
  input: "weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "weighted_loss/Const"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "weighted_loss/Sum"
  op: "Sum"
  input: "weighted_loss/Mul"
  input: "weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "weighted_loss/ones_like/Shape"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "weighted_loss/ones_like/Const"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "weighted_loss/ones_like"
  op: "Fill"
  input: "weighted_loss/ones_like/Shape"
  input: "weighted_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "weighted_loss/mul"
  op: "Mul"
  input: "weighted_loss/ones_like"
  input: "weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "weighted_loss/Const_1"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "weighted_loss/Sum_1"
  op: "Sum"
  input: "weighted_loss/mul"
  input: "weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "weighted_loss/Const_2"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "weighted_loss/Sum_2"
  op: "Sum"
  input: "weighted_loss/Sum"
  input: "weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "weighted_loss/Greater/y"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "weighted_loss/Greater"
  op: "Greater"
  input: "weighted_loss/Sum_1"
  input: "weighted_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "weighted_loss/Equal/y"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "weighted_loss/Equal"
  op: "Equal"
  input: "weighted_loss/Sum_1"
  input: "weighted_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "weighted_loss/ones_like_1/Shape"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "weighted_loss/ones_like_1/Const"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "weighted_loss/ones_like_1"
  op: "Fill"
  input: "weighted_loss/ones_like_1/Shape"
  input: "weighted_loss/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "weighted_loss/Select"
  op: "Select"
  input: "weighted_loss/Equal"
  input: "weighted_loss/ones_like_1"
  input: "weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "weighted_loss/div"
  op: "RealDiv"
  input: "weighted_loss/Sum_2"
  input: "weighted_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "weighted_loss/zeros_like"
  op: "Const"
  input: "^weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "weighted_loss/value"
  op: "Select"
  input: "weighted_loss/Greater"
  input: "weighted_loss/div"
  input: "weighted_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "average_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_loss"
      }
    }
  }
}
node {
  name: "average_loss"
  op: "ScalarSummary"
  input: "average_loss/tags"
  input: "weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/gradients/Fill"
  op: "Fill"
  input: "dnn/gradients/Shape"
  input: "dnn/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "dnn/gradients/Fill"
  input: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/mul"
  op: "Mul"
  input: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  input: "dnn/head/weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/mul"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Sum"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "dnn/head/ExpandDims"
  input: "dnn/gradients/dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/mul_1"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^dnn/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^dnn/gradients/dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "dnn/gradients/dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "dnn/gradients/dnn/head/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "dnn/gradients/dnn/head/ExpandDims_grad/Reshape"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/mul"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "dnn/gradients/dnn/head/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/mul_1"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  input: "^dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3951
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3951
          }
        }
      }
    }
  }
}
node {
  name: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3951
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/kernel/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  input: "dnn/dnn/logits/bias/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/bias/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/Adagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/hiddenlayer_0/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/hiddenlayer_0/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/hiddenlayer_1/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/hiddenlayer_1/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/hiddenlayer_2/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/hiddenlayer_2/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/logits/kernel/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/kernel/part_0"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update_dnn/logits/bias/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/bias/part_0"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  input: "dnn/Adagrad/learning_rate"
  input: "dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/Adagrad/update"
  op: "NoOp"
  input: "^dnn/Adagrad/update_dnn/hiddenlayer_0/kernel/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/hiddenlayer_0/bias/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/hiddenlayer_1/kernel/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/hiddenlayer_1/bias/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/hiddenlayer_2/kernel/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/hiddenlayer_2/bias/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/logits/kernel/part_0/ApplyAdagrad"
  input: "^dnn/Adagrad/update_dnn/logits/bias/part_0/ApplyAdagrad"
}
node {
  name: "dnn/Adagrad/value"
  op: "Const"
  input: "^dnn/Adagrad/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "dnn/Adagrad"
  op: "AssignAdd"
  input: "global_step"
  input: "dnn/Adagrad/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/hiddenlayer_0/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_0/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_1/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_1/bias/part_0/Assign"
  input: "^dnn/hiddenlayer_2/kernel/part_0/Assign"
  input: "^dnn/hiddenlayer_2/bias/part_0/Assign"
  input: "^dnn/logits/kernel/part_0/Assign"
  input: "^dnn/logits/bias/part_0/Assign"
  input: "^dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/kernel/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/bias/part_0/Adagrad/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/kernel/part_0"
        string_val: "dnn/hiddenlayer_0/bias/part_0"
        string_val: "dnn/hiddenlayer_1/kernel/part_0"
        string_val: "dnn/hiddenlayer_1/bias/part_0"
        string_val: "dnn/hiddenlayer_2/kernel/part_0"
        string_val: "dnn/hiddenlayer_2/bias/part_0"
        string_val: "dnn/logits/kernel/part_0"
        string_val: "dnn/logits/bias/part_0"
        string_val: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
        string_val: "dnn/dnn/logits/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/logits/bias/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/logits/kernel/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/logits/bias/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/kernel/part_0"
        string_val: "dnn/hiddenlayer_0/bias/part_0"
        string_val: "dnn/hiddenlayer_1/kernel/part_0"
        string_val: "dnn/hiddenlayer_1/bias/part_0"
        string_val: "dnn/hiddenlayer_2/kernel/part_0"
        string_val: "dnn/hiddenlayer_2/bias/part_0"
        string_val: "dnn/logits/kernel/part_0"
        string_val: "dnn/logits/bias/part_0"
        string_val: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
        string_val: "dnn/dnn/logits/kernel/part_0/Adagrad"
        string_val: "dnn/dnn/logits/bias/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^dnn/input_from_feature_columns/input_layer/Lokacija_indicator/Lokacija_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/SifraCesteNaselja_indicator/SifraCesteNaselja_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/SifraOdsekaUlice_indicator/SifraOdsekaUlice_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/StanjePrometa_indicator/StanjePrometa_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/StanjeVozisca_indicator/StanjeVozisca_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/VNaselju_indicator/VNaselju_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/VremenskeOkoliscine_indicator/VremenskeOkoliscine_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/VrstaCeste_indicator/VrstaCeste_lookup/hash_table/table_init"
  input: "^dnn/input_from_feature_columns/input_layer/VrstaVozisca_indicator/VrstaVozisca_lookup/hash_table/table_init"
  input: "^dnn/head/predictions/class_string_lookup/table_init"
  input: "^dnn/head/class_id_lookup/hash_table/table_init"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_0/activation"
  input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_1/activation"
  input: "dnn/dnn/hiddenlayer_2/fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_2/activation"
  input: "dnn/dnn/logits/fraction_of_zero_values"
  input: "dnn/dnn/logits/activation"
  input: "loss"
  input: "average_loss"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_9a6514eedccb4bd4bf88ebd17baf0a68/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_0/kernel/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_1/kernel/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/bias/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_2/kernel/t_0/Adagrad"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/bias/t_0/Adagrad"
        string_val: "dnn/logits/kernel"
        string_val: "dnn/logits/kernel/t_0/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 17
          }
        }
        string_val: "100 0,100"
        string_val: "100 0,100"
        string_val: "3951 100 0,3951:0,100"
        string_val: "3951 100 0,3951:0,100"
        string_val: "200 0,200"
        string_val: "200 0,200"
        string_val: "100 200 0,100:0,200"
        string_val: "100 200 0,100:0,200"
        string_val: "100 0,100"
        string_val: "100 0,100"
        string_val: "200 100 0,200:0,100"
        string_val: "200 100 0,200:0,100"
        string_val: "5 0,5"
        string_val: "5 0,5"
        string_val: "100 5 0,100:0,5"
        string_val: "100 5 0,100:0,5"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/bias/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/kernel/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/bias/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/kernel/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/bias/part_0/read"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/kernel/part_0/read"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad/read"
  input: "dnn/logits/bias/part_0/read"
  input: "dnn/dnn/logits/bias/part_0/Adagrad/read"
  input: "dnn/logits/kernel/part_0/read"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad/read"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/bias/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/bias/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/bias/part_0/Adagrad"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "3951 100 0,3951:0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/kernel/part_0"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/kernel/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "3951 100 0,3951:0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/kernel/part_0/Adagrad"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3951
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "200 0,200"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_1/bias/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/bias/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "200 0,200"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/bias/part_0/Adagrad"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 200 0,100:0,200"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/kernel/part_0"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/kernel/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 200 0,100:0,200"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/kernel/part_0/Adagrad"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/hiddenlayer_2/bias/part_0"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/bias/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/bias/part_0/Adagrad"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "200 100 0,200:0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/hiddenlayer_2/kernel/part_0"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_2/kernel/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "200 100 0,200:0,100"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_2/kernel/part_0/Adagrad"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "5 0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/logits/bias/part_0"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/bias/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "5 0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dnn/dnn/logits/bias/part_0/Adagrad"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 5 0,100:0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dnn/logits/kernel/part_0"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/kernel/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 5 0,100:0,5"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dnn/dnn/logits/kernel/part_0/Adagrad"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 24
}
